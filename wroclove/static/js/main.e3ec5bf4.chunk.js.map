{"version":3,"sources":["components/SlotInfo/SlotInfo.js","components/Button/Button.js","components/Intro/Intro.js","components/Intersection/Intersection.js","classes/CameraControls.class.js","classes/Mercator.class.js","config.js","utilities/geo.utilities.js","classes/SceneService.js","classes/SceneManager.class.js","classes/TileGridLayer.class.js","classes/CSVLayer.class.js","classes/GeoJsonLayer.class.js","components/SceneContainer/SceneContainer.js","components/CursorParallax/CursorParallax.js","components/Overlay/Overlay.js","components/Lines/Lines.js","components/Heading/Heading.js","components/Page/Page.js","components/Databox/Databox.js","components/Playground/Playground.js","App.js","serviceWorker.js","index.js","components/SlotInfo/SlotInfo.module.css","components/Overlay/Overlay.module.css","components/Databox/Databox.module.css","components/Intro/Intro.module.css","components/CursorParallax/CursorParallax.module.css","components/Lines/Lines.module.css"],"names":["classNames","require","SlotInfo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","n","state","initial","strNew","strOld","value","titleNew","titleOld","title","anim","prevProps","prevState","_this2","_this$setState","suffix","setState","defineProperty","concat","setTimeout","react_default","a","createElement","className","styles","wrapper","headline","headlineOld","headlineNew","slot","str","split","map","letter","idx","key","aside","info","Component","defaultProps","Button","_ref","label","width","height","viewBox","xmlns","x","y","fill","dy","INFO_ELEMENTS","Intro","slotsData","slotsNumber","slots","getFirstItems","setInterval","getNextItem","_this3","Array","shift","nextSlot","Math","floor","random","length","r1","r2","_this4","progress","p","videoStyle","clipPath","opacity","playsInline","autoPlay","muted","loop","style","src","type","components_SlotInfo_SlotInfo","assign","POSITION","ABOVE","BELOW","INSIDE","INVISIBLE","ratio","options","root","threshold","_","render","Fragment","onEnter","onExit","Intersection","onProgress","ref","useRef","_useState","useState","_useState2","slicedToArray","setProgress","_useState3","_useState4","position","setPosition","_useState5","_useState6","prevPosition","setPrevPosition","onIntersect","entries","forEach","entry","currentPosition","bounds","top","bottom","getPosition","intersectionRatio","boundingClientRect","currentProgress","round","rootBounds","h","pTop","max","min","pBottom","getProgress","useEffect","observer","IntersectionObserver","current","observe","React","cloneElement","displayName","instance","CameraControls","camera","nodeEl","enabled","arguments","undefined","controls","OrbitControls","enableDamping","dampingFactor","rotateSpeed","autoRotateSpeed","enableZoom","zoom","minPolarAngle","maxPolarAngle","PI","update","EARTH_RADIUS","BBOX_WROCLAW","POINT_WROCLAW_CENTER","URL_PROXY","TILE_URL_CARTO_DARK","z","SECTIONS","SECTION_CAMERA_POSITIONS","_SECTION_CAMERA_POSIT","target","radius","deg2rad","deg","rad2deg","rad","lon2tile","lon","pow","lat2tile","lat","log","tan","cos","lonlat2XY","tile2geo","atan","exp","Mercator","center","factor","isArray","latInRadians","k","inLon","inLat","b","sin","px","py","D","sinh","asin","cosh","classes_SceneService","SceneService","running$","BehaviorSubject","sceneSwitch$","Subject","sceneProgress$","sceneToggle$","flip$","flipMidPoint$","introCamera$","loading$","Vector3","defaultOptions","SceneManager","canvasEl","canvas","dimensions","objectSpread","layers","init","isEnabled","isDestroyed","window","cancelAnimationFrame","raf","document","removeEventListener","onKeyDown","l","destroy","initScene","initCamera","initRenderer","initLoader","initMercator","initHelpers","initControls","initEvents","requestAnimationFrame","scene","Scene","layersGroup","Group","name","add","AxesHelper","gridHelper","GridHelper","setY","material","blending","AdditiveBlending","transparent","geometry","OctahedronGeometry","MeshNormalMaterial","cameraPositionHelper","Mesh","renderer","WebGLRenderer","alpha","antialias","setClearColor","shadowMap","soft","setPixelRatio","devicePixelRatio","lerpEnabled","cameraTarget","clone","cameraHeight","cameraRadius","cameraTargetPosition","aspectRatio","PerspectiveCamera","set","loadingManager","LoadingManager","onStart","url","itemsLoaded","itemsTotal","next","cameraTargetOrigin","cameraPosition","cameraPositionTarget","cameraControls","debug","loadCameraFromLS","innerWidth","innerHeight","cameraMove$","fromEvent","passive","pipe","mouseEvent","clientX","clientY","subscribe","angleX","bind","addEventListener","mercator","JSON","parse","localStorage","getItem","copy","object","console","join","setItem","stringify","e","keyCode","saveControlsLS","aspect","updateProjectionMatrix","setSize","lookAt","lerp","layer","push","group","traverse","child","visible","direction","setOpacity","_this$cameraTarget","_this$cameraPosition","_this$cameraPositionT","apply","toConsumableArray","enable","TileGridLayer","bbox","tileurl","tileSize","tile","coordsNW","coordsSE","posNW","fromGeo","posSE","ceil","abs","getTileSize","tiles","offset","t1","t2","tX","tY","tc","ix","iy","sort","ta","tb","hypot","getTilesFromBbox","tileOffset","initTiles","initMesh","loader","TextureLoader","crossOrigin","createTile","createMesh","rotation","canvas2","ctx","getContext","ctx2","load","texture","img","image","drawImage","textureFinal","Texture","needsUpdate","globalCompositeOperation","fillStyle","fillRect","textureFinal2","PlaneGeometry","MeshBasicMaterial","depthTest","materialWhite","mesh","mesh2","name2","_x","_y","_z","tl","kill","TimelineMax","staggerTo","onUpdateParams","flipped","onUpdate","self","CSVLayer","data","columns","createObjects","colors","color","Color","scale","scaleThreshold","domain","range","BufferGeometry","vertices","degree","Float32Array","displacement","v3Colors","point","_this$mercator$fromGe","parseFloat","X","Y","d","r","g","addAttribute","Float32BufferAttribute","BufferAttribute","uniforms","u_hexSize","u_angle","ShaderMaterial","vertexShader","fragmentShader","LineSegments","ev","pageX","scrollX","pageY","scrollY","TweenLite","fromTo","paused","to","ease","Power2","easeInOut","Bounce","easeOut","side","DoubleSide","transform","GeoJsonLayer","animations","points","initMaterials","FileLoader","LineBasicMaterial","pointMaterial","PointsMaterial","size","vertexColors","VertexColors","featureEach","feature","id","getType","createPoint","createMeshPoints","coords","getCoord","properties","altitude","pointsGeometry","computeBoundingSphere","pointsMesh","Points","Geometry","shapeCentroid","getCoords","centroid","coordAll","centerPoint","Error","c","pairs","controlAnimation","o","_scale","delay","stagger","staggerOffset","SteppedEase","config","t","_rotation","Elastic","seek","totalDuration","wrapperStyle","overflow","canvasStyle","SceneContainer","canvasRef","createRef","onResize","assertThisInitialized","_this$canvasRef$curre","parentElement","getBoundingClientRect","sceneManager","initDebug","initLayers","targetPosition","setCameraTargetPosition","setRunning","filter","val","section","scan","acc","curr","values","keys","reduce","prev","distinctUntilChanged","tilelayer","addLayer","flip","boundslayer","process","axios","get","then","response","centroidsLayer","show","hide","pois","collection","includes","amenity","shop","featureCollection","parks","roads","onLoad","CursorParallax","unsetEvents","cursorRef","containerRef","mouseMove$","cursorVisible","classList","toggle","active","bboxC","cPos","tPos","pos","diff","angle","atan2","scaleX","Rematrix","container","cursor","Progress","step","setStep","_useState7","_useState8","total","setTotal","_useState9","_useState10","progressProps","strokeDasharray","strokeDashoffset","calculateProgress","body","html","documentElement","totalHeight","scrollHeight","offsetHeight","clientHeight","pageYOffset","scrollTop","viewPortHeight","sections","querySelectorAll","minMax","arr","i","len","v","findMinMax","from","sectionEl","s","lineProps","x1","PROGRESS_SIZE","y1","x2","y2","svgStyle","cx","cy","stroke","strokeWidth","progressCircle","ScrollDown","scrollDown","arrows","wheel","Overlay","Overlay_Progress","components_CursorParallax_CursorParallax","Overlay_ScrollDown","Lines","observable","midPoint","containerEl","elements","setElements","useLayoutEffect","els","subscription","TimelineLite","shuffle","unsubscribe","item","array","counter","index","temp","Heading","subtitle","children","Page","Databox","unit","databox","valueSpan","defaultState","test","other","Playground","stateKeys","for","checked","onChange","App","enabledScene","enabledFrame","enabledAnimate","enabledLerp","loaded","sectionProgress$","enter$","exit$","takeWhile","endWith","intersect","BrowserRouter","Route","path","exact","component","components_Lines_Lines","components_SceneContainer_SceneContainer","components_Intersection_Intersection","components_Intro_Intro","components_Page_Page","components_Heading_Heading","components_Databox_Databox","_ref2","queryString","location","search","Boolean","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","moveDown","cta","cta-ghost"],"mappings":"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","file":"static/js/main.e3ec5bf4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styles from './SlotInfo.module.css';\r\nconst classNames = require('classnames');\r\n\r\nclass SlotInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.n = 0;\r\n    this.state = {\r\n      initial: true,\r\n      strNew: '',\r\n      strOld: props.value,\r\n      titleNew: '',\r\n      titleOld: props.title,\r\n      anim: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.value !== this.props.value) {\r\n\r\n      const suffix = ++this.n % 2 === 1 ? 'New' : 'Old';\r\n      \r\n      this.setState({\r\n        [`str${suffix}`]: this.props.value,\r\n        [`title${suffix}`]: this.props.title\r\n      });\r\n\r\n      setTimeout(() => {\r\n        this.setState(state => ({\r\n          anim: !state.anim\r\n        }));\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={classNames(styles.wrapper, {\r\n          [styles.anim]: this.state.anim\r\n        })}\r\n      >\r\n        <span className={styles.headline}>\r\n          <span className={styles.headlineOld}>{this.state.titleOld}</span>\r\n          <span className={styles.headlineNew}>{this.state.titleNew}</span>\r\n        </span>\r\n        <span className={classNames(styles.slot)}>\r\n          <span className={classNames(styles.str, styles.strOld)}>\r\n            {this.state.strOld.split('').map((letter, idx) => (\r\n              <span key={idx}>{letter}</span>\r\n            ))}\r\n          </span>\r\n          <span className={classNames(styles.str, styles.strNew)}>\r\n            {this.state.strNew.split('').map((letter, idx) => (\r\n              <span key={idx}>{letter}</span>\r\n            ))}\r\n          </span>\r\n        </span>\r\n\r\n        <span className={styles.aside}>{this.props.info}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSlotInfo.defaultProps = {\r\n  title: '',\r\n  value: '',\r\n  info: ''\r\n};\r\n\r\nexport default SlotInfo;\r\n","import React from 'react';\r\n// import styles from './Button.module.css';\r\n\r\nconst Button = ({ label, width, height }) => {\r\n  return (\r\n      <svg\r\n        width={width}\r\n        height={height}\r\n        viewBox={`0 0 ${width} ${height}`}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <rect x=\"0\" y=\"0\" fill=\"none\" width={ width } height={ height } />\r\n        <text x={width/2} y={height/2} dy=\"0.3em\">{label}</text>\r\n      </svg>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  width: 135,\r\n  height: 65\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\n\r\nimport styles from './Intro.module.css';\r\nimport SlotInfo from '../SlotInfo/';\r\nimport Button from '../Button/';\r\n\r\nconst INFO_ELEMENTS = [\r\n  { title: 'Population', value: '639 248', info: '4th biggest city in Poland' },\r\n  { title: 'Area', value: '292.34 km2', info: '3rd largest city' },\r\n  {\r\n    title: 'Real Estates',\r\n    value: '6 500 pln/m2',\r\n    info: 'something else fancy'\r\n  },\r\n  { title: 'Other', value: '12 123', info: 'some very nice info here' }\r\n];\r\n\r\nclass Intro extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.slotsData = [...INFO_ELEMENTS];\r\n    this.slotsNumber = props.slots || 3;\r\n    this.state = {\r\n      slots: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getFirstItems();\r\n    setInterval(() => {\r\n      this.getNextItem();\r\n    }, 4000);\r\n  }\r\n\r\n  getFirstItems() {\r\n    const slots = Array(this.slotsNumber)\r\n      .fill(null)\r\n      .map(() => {\r\n        return this.slotsData.shift();\r\n      });\r\n\r\n    this.setState({ slots });\r\n  }\r\n\r\n  getNextItem() {\r\n    const nextSlot = this.slotsData.shift();\r\n    const n = Math.floor(Math.random() * this.slotsNumber);\r\n\r\n    this.setState(state => {\r\n      const slots = state.slots;\r\n      slots[n] = nextSlot;\r\n      return { slots };\r\n    });\r\n\r\n    if (this.slotsData.length === 0) {\r\n      this.slotsData = [...INFO_ELEMENTS];\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { progress } = this.props.progress;\r\n    const p = progress;\r\n\r\n    const videoStyle = {\r\n      clipPath: `inset(${p * 15}% ${p * 5}% ${p * 15}% ${p * 35}%)`,\r\n      opacity: scaleLinear(progress, [0, 1], [0.25, 1])\r\n    };\r\n\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <video playsInline autoPlay muted loop style={videoStyle} >\r\n          <source src='/assets/video/out-loop.mp4' type=\"video/mp4\" />\r\n        </video> \r\n        <div className={styles.title}>\r\n          <span>Poland</span>\r\n          <h1>Wroclaw</h1>\r\n          <p>Meeting place.<br />Explore city by data.</p>\r\n        </div>\r\n        <div className={styles['cta']}>\r\n          {/* <Button label=\"explore\" />  */}\r\n        </div>\r\n        <div className={styles.info}>\r\n          {this.state.slots.map((slot, idx) => (\r\n            <SlotInfo {...this.state.slots[idx]} key={idx} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Intro;\r\n\r\n\r\n/* TODO: move to helpers */\r\nfunction scaleLinear( value, r1, r2 ) { \r\n  return ( value - r1[ 0 ] ) * ( r2[ 1 ] - r2[ 0 ] ) / ( r1[ 1 ] - r1[ 0 ] ) + r2[ 0 ];\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst POSITION = {\r\n  ABOVE: 'above',\r\n  BELOW: 'below',\r\n  INSIDE: 'inside',\r\n  INVISIBLE: 'invisible'\r\n};\r\n\r\nconst defaultProps = {\r\n  ratio: 1,\r\n  options: {\r\n    root: null,\r\n    // rootMargin: '-100px -100px -100px -100px',\r\n    threshold: Array(100)\r\n      .fill(0)\r\n      .map((_, idx) => idx / 100)\r\n  },\r\n  render: () => <></>,\r\n  onEnter: () => {},\r\n  onExit: () => {}\r\n};\r\n\r\nconst Intersection = props => {\r\n  const { render, options, onEnter, onExit, onProgress, ratio } = props;\r\n\r\n  const ref = useRef(null);\r\n\r\n  const [progress, setProgress] = useState(0);\r\n  const [position, setPosition] = useState(POSITION.INVISIBLE);\r\n  const [prevPosition, setPrevPosition] = useState(null);\r\n\r\n  const onIntersect = entries => {\r\n    entries.forEach(entry => {\r\n      const currentPosition = getPosition(\r\n        entry.intersectionRatio,\r\n        entry.boundingClientRect\r\n      );\r\n\r\n      const currentProgress = Math.round(getProgress(\r\n        entry.rootBounds,\r\n        entry.boundingClientRect,\r\n        ratio\r\n      ) * 10) / 10;\r\n\r\n      const cbArgs = {\r\n        position: currentPosition,\r\n        ratio: entry.intersectionRatio,\r\n        progress\r\n      };\r\n\r\n      onProgress &&\r\n        onProgress({ progress: currentProgress, position: currentPosition });\r\n\r\n      setPosition(currentPosition);\r\n      setProgress(currentProgress);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(onIntersect, options);\r\n    ref.current && observer.observe(ref.current);\r\n\r\n\r\n    setPrevPosition(position);\r\n  }, []);\r\n\r\n  if (position !== prevPosition) {\r\n    if (position === POSITION.INSIDE) {\r\n      onEnter();\r\n    } else {\r\n      onExit();\r\n    }\r\n    setPrevPosition(position);\r\n  }\r\n\r\n  return React.cloneElement(render({ progress, position }), { ref });\r\n};\r\n\r\nfunction getPosition(ratio, bounds) {\r\n  if (ratio > 0) {\r\n    return POSITION.INSIDE;\r\n  } else if (bounds.top > 0) {\r\n    return POSITION.BELOW;\r\n  } else if (bounds.bottom < 0) {\r\n    return POSITION.ABOVE;\r\n  } else {\r\n    return POSITION.INVISIBLE;\r\n  }\r\n}\r\n\r\nfunction getProgress(rootBounds, bounds, ratio) {\r\n  if (!bounds || !rootBounds) {\r\n    return 0;\r\n  }\r\n\r\n  const h = rootBounds.height * ratio;\r\n\r\n  const pTop =\r\n    ratio === 1\r\n      ? Math.max(Math.min((h - bounds.top) / h, 1), 0)\r\n      : Math.max(Math.min((h - (bounds.top - h)) / h, 1), 0);\r\n\r\n  const pBottom =\r\n    ratio === 1\r\n      ? 1 - Math.max(Math.min((h - bounds.bottom) / h, 1), 0)\r\n      : 1 - Math.max(Math.min((h - (bounds.bottom - h)) / h, 1), 0);\r\n\r\n  return bounds.top > 0 ? pTop : pBottom;\r\n}\r\n\r\nIntersection.defaultProps = defaultProps;\r\nIntersection.displayName = 'Intersection';\r\n\r\nexport default Intersection;\r\n","import OrbitControls from 'orbit-controls-es6';\r\n\r\nlet instance;\r\nclass CameraControls {\r\n  constructor(camera, nodeEl, enabled = true, options) {\r\n    if (instance) {\r\n      return instance;\r\n    }\r\n\r\n    this.controls = new OrbitControls(camera, nodeEl);\r\n    this.controls.enabled = enabled;\r\n    this.controls.enableDamping = true;\r\n    this.controls.dampingFactor = 0.1;\r\n    this.controls.rotateSpeed = 0.2;\r\n    // this.controls.autoRotate = true;\r\n    this.controls.autoRotateSpeed = 0.1;\r\n    this.controls.enableZoom = options.zoom || false;\r\n\r\n    this.controls.minPolarAngle = 0; // radians\r\n    this.controls.maxPolarAngle = Math.PI / 2 - 0 * (Math.PI / 180); // radians\r\n\r\n    instance = this;\r\n  }\r\n\r\n  enable() {\r\n    this.controls.enabled = true;\r\n  }\r\n\r\n  disable() {\r\n    this.controls.enabled = false;\r\n  }\r\n\r\n  update() {\r\n    this.controls.update();\r\n  }\r\n}\r\n\r\nexport default CameraControls;\r\n","import { EARTH_RADIUS } from '../config';\r\nimport { deg2rad, rad2deg } from '../utilities';\r\n\r\nlet instance;\r\n\r\nclass Mercator {\r\n  constructor(center, factor = 1) {\r\n    if (instance) {\r\n      return instance;\r\n    }\r\n\r\n    this.lon = Array.isArray(center) ? center[0] : center.lon;\r\n    this.lat = Array.isArray(center) ? center[1] : center.lat;\r\n\r\n    this.latInRadians = deg2rad(this.lat);\r\n    this.k =  factor;\r\n    this.radius = EARTH_RADIUS;\r\n\r\n    instance = this;\r\n  }\r\n\r\n  fromGeo(inLon, inLat) {\r\n    const lat = deg2rad(inLat);\r\n    const lon = deg2rad(inLon - this.lon);\r\n    const b = Math.sin(lon) * Math.cos(lat);\r\n    const x = 0.5 * this.k * this.radius * Math.log((1 + b) / (1 - b));\r\n    const y =\r\n      -this.k *\r\n      this.radius *\r\n      (Math.atan(Math.tan(lat) / Math.cos(lon)) - this.latInRadians);\r\n\r\n    return {\r\n      x,\r\n      y,\r\n    };\r\n  };\r\n\r\n  fromXY(px, py) {\r\n    const x = px / (this.k * this.radius);\r\n    const y = py / (this.k * this.radius);\r\n    const D = y + this.latInRadians;\r\n\r\n    let lon = Math.atan(Math.sinh(x) / Math.cos(D));\r\n    let lat = Math.asin(Math.sin(D) / Math.cosh(x));\r\n\r\n    lon = this.lon + rad2deg(lon);\r\n    lat = rad2deg(lat);\r\n\r\n    return { lat, lon };\r\n  };\r\n\r\n\r\n}\r\n\r\nexport default Mercator;\r\n\r\n","// Lat = Y Long = X\r\n// wroclaw\r\n// lat: 51.107883\r\n// lon: 17.038538\r\n\r\n// bbox = left, bottom, right, top\r\n// bbox = min Longitude , min Latitude , max Longitude , max Latitude\r\n// box =  minX, minY, maxX, maxY\r\n\r\nexport const PI = 3.14159;\r\n\r\nexport const PI_HALF = 1.5707963;\r\n\r\nexport const EARTH_RADIUS = 6378137;\r\n\r\nexport const BBOX_WROCLAW = [\r\n  16.80552829,\r\n  51.040649965,\r\n  17.177328263,\r\n  51.212286538\r\n];\r\n\r\nexport const DEFAULT_CAMERA_HEIGHT = 2500;\r\nexport const DEFAULT_CAMERA_RADIUS = 2500;\r\n\r\nexport const BBOX_WROCLAW_CENTRE = [17.008209, 51.095329, 17.066746, 51.122435];\r\n\r\nexport const POINT_WROCLAW_CENTER = [17.038538, 51.107883];\r\n\r\nexport const ZOOM_TILES = 13;\r\n\r\nexport const URL_PROXY = 'http://localhost:8080/';\r\n\r\nexport const TILE_URL_OSM = (x, y, z) =>\r\n  `${URL_PROXY}https://a.tile.openstreetmap.org/${z}/${x}/${y}.png`;\r\n\r\nexport const TILE_URL_LOCAL = (x, y, z) =>\r\n  `${URL_PROXY}http://localhost:1337/${z}/${x}/${y}.png`;\r\n\r\nexport const TILE_URL_CARTO_DARK = (x, y, z) =>\r\n  `${URL_PROXY}https://a.basemaps.cartocdn.com/dark_all/${z}/${x}/${y}.png`;\r\n\r\nexport const TILE_URL_ESRI = (x, y, z) =>\r\n  `${URL_PROXY}https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/${z}/${y}/${x}`;\r\n\r\nexport const TILE_URL_ORTO_2018 = (x, y, z) =>\r\n  `${process.env.PUBLIC_URL}/assets/tiles/${z}/${x}/${y}.png`;\r\n\r\n/**  */\r\n\r\nexport const SECTIONS = {\r\n  zero: 'zero',\r\n  intro: 'intro',\r\n  s1: 'section-1'\r\n};\r\n\r\nexport const SECTION_CAMERA_POSITIONS = {\r\n  [SECTIONS.zero]: {\r\n    position: [40.20286833696785, 531.3174761148155, 4212.832338937036],\r\n    target: [0, 0, 0],\r\n    height: 0,\r\n    radius: 2500\r\n  },\r\n  [SECTIONS.intro]: {\r\n    target: [10.002356154626678,-69.72470183681514,118.33711986919897],\r\n    position: [94.7955293601149,2102.738893213241,3231.958736212305],\r\n    height: 0,\r\n    radius: 500\r\n  },\r\n  [SECTIONS.s1]: {\r\n    target: [449.75323777085976, 180.08115588669077, 197.3593492209103],\r\n    position: [718.0902311408245, 4157.7494885815, 3358.6568217712497]\r\n  }\r\n};\r\n","const PI = 3.14159;\r\n// const PI_HALF = 1.5707963;\r\n\r\nexport const deg2rad = deg => {\r\n  return (deg * PI) / 180;\r\n};\r\n\r\nexport const rad2deg = rad => {\r\n  return (rad * 180) / PI;\r\n};\r\n\r\nexport const lon2tile = (lon, zoom) =>\r\n  Math.floor(((lon + 180) / 360) * Math.pow(2, zoom));\r\n\r\nexport const lat2tile = (lat, zoom) =>\r\n  Math.floor(\r\n    ((1 -\r\n      Math.log(\r\n        Math.tan((lat * Math.PI) / 180) + 1 / Math.cos((lat * Math.PI) / 180)\r\n      ) /\r\n        Math.PI) /\r\n      2) *\r\n      Math.pow(2, zoom)\r\n  );\r\n\r\n// Lat = Y Long = X\r\nexport const lonlat2XY = (lon, lat, zoom) => {\r\n  return [lon2tile(lon, zoom), lat2tile(lat, zoom), zoom];\r\n};\r\n\r\nexport const getTilesFromBbox = (bbox, zoom, offset = 0) => {\r\n  // T1 = LEFT TOP\r\n  //      min lon, max lat\r\n  // T2 = RIGHT BOTTOM\r\n  //      max lon, min lat\r\n\r\n  const t1 = lonlat2XY(bbox[0], bbox[3], zoom);\r\n  const t2 = lonlat2XY(bbox[2], bbox[1], zoom);\r\n\r\n  if (offset) {\r\n    t1[0] = t1[0] - offset;\r\n    t1[1] = t1[1] - offset;\r\n    t2[0] = t2[0] + offset;\r\n    t2[1] = t2[1] + offset;\r\n  }\r\n\r\n  const tX = Math.abs(t1[0] - t2[0]) + 1;\r\n  const tY = Math.abs(t1[1] - t2[1]) + 1;\r\n  const tc = [Math.abs(t1[0] + t2[0]) / 2, Math.abs(t1[1] + t2[1]) / 2];\r\n\r\n  const tiles = [];\r\n  for (let ix = 0; ix < tX; ix++) {\r\n    for (let iy = 0; iy < tY; iy++) {\r\n      const x = t1[0] + ix;\r\n      const y = t1[1] + iy;\r\n      const z = zoom;\r\n\r\n      const tile = [x, y, z];\r\n\r\n      tiles.push(tile);\r\n    }\r\n  }\r\n\r\n  // sort from center\r\n  tiles.sort((ta, tb) => {\r\n    return (\r\n      Math.hypot(ta[0] - tc[0], ta[1] - tc[1]) -\r\n      Math.hypot(tb[0] - tc[0], tb[1] - tc[1])\r\n    );\r\n  });\r\n\r\n  return tiles;\r\n};\r\n\r\nexport const getTileSize = (lon, lat, zoom, mercator) => {\r\n  const tile = lonlat2XY(lon, lat, zoom);\r\n\r\n  const coordsNW = tile2geo(tile[0], tile[1], zoom);\r\n  const coordsSE = tile2geo(tile[0] + 1, tile[1] + 1, zoom);\r\n\r\n  const posNW = mercator.fromGeo(coordsNW.lon, coordsNW.lat);\r\n  const posSE = mercator.fromGeo(coordsSE.lon, coordsSE.lat);\r\n\r\n  return Math.ceil(Math.abs(posNW.x - posSE.x));\r\n};\r\n\r\nexport const tile2geo = (x, y, z) => {\r\n  const n = Math.PI - (2 * Math.PI * y) / Math.pow(2, z);\r\n  const lat = (180 / Math.PI) * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\r\n  const lon = (x / Math.pow(2, z)) * 360 - 180;\r\n\r\n  return {\r\n    lon,\r\n    lat\r\n  };\r\n};\r\n","import { Subject, BehaviorSubject } from 'rxjs';\r\n\r\nclass SceneService {\r\n  constructor() {\r\n    this.running$ = new BehaviorSubject(false);\r\n\r\n    this.sceneSwitch$ = new Subject();\r\n    this.sceneProgress$ = new Subject();\r\n    this.sceneToggle$ = new Subject();\r\n\r\n    this.flip$ = new Subject();\r\n    this.flipMidPoint$ = new Subject();\r\n\r\n    this.introCamera$ = new Subject();\r\n    this.loading$ = new Subject();\r\n  }\r\n}\r\n\r\nexport default new SceneService();\r\n","import {\r\n  AdditiveBlending,\r\n  AxesHelper,\r\n  GridHelper,\r\n  Mesh,\r\n  Group,\r\n  Scene,\r\n  WebGLRenderer,\r\n  // OrthographicCamera,\r\n  LoadingManager,\r\n  PerspectiveCamera,\r\n  Vector3,\r\n  OctahedronGeometry,\r\n  MeshNormalMaterial\r\n} from 'three';\r\nimport CameraControls from './CameraControls.class';\r\nimport Mercator from './Mercator.class';\r\nimport {\r\n  DEFAULT_CAMERA_HEIGHT,\r\n  DEFAULT_CAMERA_RADIUS,\r\n  POINT_WROCLAW_CENTER\r\n} from '../config';\r\nimport { fromEvent } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { deg2rad } from '../utilities';\r\nimport SceneService from './SceneService';\r\n\r\nconst nearPlane = 10;\r\nconst farPlane = 50000;\r\nconst fieldOfView = 20;\r\nconst LS_PREFIX = 'wroclovedata_';\r\n\r\nconst center = new Vector3(0, 0, 0);\r\n\r\nconst defaultOptions = {};\r\n\r\nclass SceneManager {\r\n  constructor(canvasEl, options) {\r\n    this.canvas = canvasEl;\r\n    this.dimensions = {\r\n      width: canvasEl.width,\r\n      height: canvasEl.height\r\n    };\r\n\r\n    this.options = {\r\n      ...defaultOptions,\r\n      ...options\r\n    };\r\n\r\n    this.layers = [];\r\n\r\n    this.init();\r\n\r\n    this.isEnabled = true;\r\n    this.isDestroyed = false;\r\n  }\r\n\r\n  destroy() {\r\n    this.isDestroyed = true;\r\n    window.cancelAnimationFrame(this.raf);\r\n\r\n    document.removeEventListener('keydown', this.onKeyDown, false);\r\n    this.layers.forEach(l => l.destroy());\r\n  }\r\n\r\n  init() {\r\n    this.initScene();\r\n    this.initCamera();\r\n\r\n    this.initRenderer();\r\n\r\n    this.initLoader();\r\n    this.initMercator();\r\n    this.initHelpers();\r\n    this.initControls();\r\n    this.initEvents();\r\n\r\n    this.loop();\r\n  }\r\n\r\n  loop() {\r\n    if (!this.isDestroyed) {\r\n      this.update();\r\n      this.render();\r\n      this.raf = window.requestAnimationFrame(() => this.loop());\r\n    }\r\n  }\r\n\r\n  initScene() {\r\n    this.scene = new Scene();\r\n    this.layersGroup = new Group();\r\n    this.layersGroup.name = 'main_group';\r\n\r\n    this.scene.add(this.layersGroup);\r\n  }\r\n\r\n  initHelpers() {\r\n    const axisHelper = new AxesHelper(1000);\r\n    const gridHelper = new GridHelper(100000, 1000, 0x1abc9c, 0x1abc9c);\r\n    gridHelper.position.setY(0);\r\n    gridHelper.material.blending = AdditiveBlending;\r\n    gridHelper.material.opacity = 0.1;\r\n    gridHelper.material.transparent = true;\r\n\r\n    // this.options.debug && this.scene.add(axisHelper);\r\n    this.scene.add(gridHelper);\r\n\r\n    const geometry = new OctahedronGeometry(10);\r\n    const material = new MeshNormalMaterial();\r\n\r\n    this.cameraPositionHelper = new Mesh(geometry, material);\r\n    // this.scene.add(this.cameraPositionHelper);\r\n  }\r\n\r\n  initRenderer() {\r\n    const renderer = new WebGLRenderer({\r\n      canvas: this.canvas,\r\n      alpha: true,\r\n      antialias: false\r\n      // opacity: 0.8,\r\n      // blending: AdditiveBlending\r\n    });\r\n    renderer.setClearColor(0xffffff, 0);\r\n\r\n    renderer.shadowMap.soft = false;\r\n    renderer.shadowMap.enabled = true;\r\n\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    // const { width, height } = this.canvas.getBoundingClientRect()\r\n    // renderer.setSize(width, height);\r\n\r\n    this.renderer = renderer;\r\n  }\r\n\r\n  initCamera() {\r\n    this.lerpEnabled = true && !this.options.controls;\r\n\r\n    this.cameraTarget = center.clone();\r\n\r\n    this.cameraHeight = DEFAULT_CAMERA_HEIGHT;\r\n    this.cameraRadius = DEFAULT_CAMERA_RADIUS;\r\n\r\n    this.cameraTargetPosition = new Vector3(0, 3000, 0);\r\n    // this.cameraTargetPosition = new Vector3( 977.235918582943, 6129.185565967538, 3248.7811695959326);\r\n    const aspectRatio = this.canvas.width / this.canvas.height;\r\n    // const DPR = window.devicePixelRatio || 1;\r\n\r\n    this.camera = new PerspectiveCamera(\r\n      fieldOfView,\r\n      aspectRatio,\r\n      nearPlane,\r\n      farPlane\r\n    );\r\n\r\n    this.camera.position.set(100, 100, 50);\r\n  }\r\n\r\n  initLoader() {\r\n    this.loadingManager = new LoadingManager();\r\n    this.loadingManager.onStart = (url, itemsLoaded, itemsTotal) =>\r\n      SceneService.loading$.next(itemsLoaded / itemsTotal);\r\n\r\n    this.loadingManager.onProgress = (url, itemsLoaded, itemsTotal) =>\r\n      SceneService.loading$.next(itemsLoaded / itemsTotal);\r\n  }\r\n\r\n  initControls() {\r\n    this.cameraTargetOrigin = new Vector3(0, 0, 0);\r\n    this.cameraTarget = new Vector3(0, 0, 0);\r\n    // this.camera.position.set(674.4484878333734, 699.3695242813109, 1679.9599093246045);\r\n    this.cameraPosition = new Vector3(); // 463.4908369079226, 7248.7811695959326, 1452.6468474768535);\r\n    this.cameraPositionTarget = new Vector3(); // 463.4908369079226, 7248.7811695959326, 1452.6468474768535);\r\n\r\n    this.cameraControls = new CameraControls(this.camera, this.canvas, true, {\r\n      zoom: this.options.debug\r\n    });\r\n    this.loadCameraFromLS();\r\n\r\n    this.cameraControls.update();\r\n\r\n    const width = window.innerWidth;\r\n    const height = window.innerHeight;\r\n\r\n    this.cameraMove$ = fromEvent(window, 'mousemove', { passive: true });\r\n    this.cameraMove$\r\n      .pipe(\r\n        map(mouseEvent => {\r\n          const { clientX, clientY } = mouseEvent;\r\n\r\n          const x = -1 + (clientX / width) * 2;\r\n          const y = -1 + (clientY / height) * 2;\r\n\r\n          return { x, y };\r\n        })\r\n      )\r\n      .subscribe(({ x, y }) => {\r\n        const angleX = deg2rad(x * 30);\r\n        const height = this.cameraHeight - 1500 * y;\r\n\r\n        this.cameraPositionTarget.x =\r\n          this.cameraPosition.x + this.cameraRadius * Math.sin(angleX);\r\n        this.cameraPositionTarget.z =\r\n          this.cameraPosition.z + this.cameraRadius * Math.cos(angleX);\r\n        this.cameraPositionTarget.y = this.cameraPosition.y + height;\r\n      });\r\n  }\r\n\r\n  initEvents() {\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n    document.addEventListener('keydown', this.onKeyDown, false);\r\n\r\n    // this.onResize();\r\n\r\n    // SceneService.sceneLerp$.subscribe(state => {\r\n    //   this.lerpEnabled = state;\r\n    // })\r\n\r\n    // const basePosition = new Vector3(\r\n    //   91.20692177227566, 1.5357417716710212e-13, 2506.3977010626277\r\n    // );\r\n\r\n    // const finalPosition = new Vector3(\r\n    //   -9.999558036124938, 1237.5296008436028, 2181.4602069132875\r\n    // );\r\n\r\n    // SceneService.introCamera$.subscribe(progress => {\r\n    //   this.camera.lookAt(center);\r\n    //   this.cameraPositionIntro = basePosition.clone().lerp(finalPosition, progress)\r\n\r\n    //   // const position = basePosition.clone().lerp(finalPosition, progress)\r\n    //   // this.camera.position.copy(position);\r\n\r\n    //   //\"x\":-9.999558036124938,\"y\":1237.5296008436028,\"z\":2181.4602069132875\r\n\r\n    // });\r\n  }\r\n\r\n  initMercator() {\r\n    this.mercator = new Mercator(POINT_WROCLAW_CENTER, 0.1);\r\n  }\r\n\r\n  loadCameraFromLS() {\r\n    const controls = JSON.parse(\r\n      localStorage.getItem(\r\n        `${LS_PREFIX}${this.options.debug ? '_debug_' : ''}_controls`\r\n      )\r\n    );\r\n\r\n    if (controls && this.cameraControls) {\r\n      this.cameraControls.controls.target.copy(controls.target);\r\n      this.cameraControls.controls.object.position.copy(controls.position);\r\n      this.cameraControls.controls.object.zoom = controls.zoom;\r\n    }\r\n  }\r\n\r\n  saveControlsLS() {\r\n    const controls = {\r\n      target: this.cameraControls.controls.target,\r\n      position: this.cameraControls.controls.object.position,\r\n      zoom: this.cameraControls.controls.object.zoom\r\n    };\r\n\r\n    console.log('controls', { controls });\r\n    console.log(\r\n      'position:',\r\n      [controls.target.x, controls.target.y, controls.target.z].join(',')\r\n    );\r\n    console.log(\r\n      'target:',\r\n      [controls.position.x, controls.position.y, controls.position.z].join(',')\r\n    );\r\n    localStorage.setItem(\r\n      `${LS_PREFIX}${this.options.debug ? '_debug_' : ''}_controls`,\r\n      JSON.stringify(controls)\r\n    );\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    switch (e.keyCode) {\r\n      case 83: {\r\n        // key: s\r\n        this.saveControlsLS();\r\n\r\n        break;\r\n      }\r\n      case 68: {\r\n        // key: d\r\n        console.log('LOAD camera from LS <==');\r\n        this.loadCameraFromLS();\r\n        break;\r\n      }\r\n      case 87: {\r\n        // this.makeScreenshot();\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  onResize(width, height) {\r\n    this.camera.aspect = width / height;\r\n    this.camera.updateProjectionMatrix();\r\n\r\n    this.renderer.setSize(width, height);\r\n  }\r\n\r\n  render() {\r\n    this.isEnabled && this.renderer.render(this.scene, this.camera);\r\n  }\r\n\r\n  update() {\r\n    if (this.isEnabled) {\r\n      this.cameraControls.update();\r\n\r\n      if (this.lerpEnabled) {\r\n        this.camera.lookAt(\r\n          this.cameraTargetOrigin.lerp(this.cameraTarget, 0.01)\r\n        );\r\n        this.camera.position.lerp(this.cameraPositionTarget, 0.01);\r\n      }\r\n\r\n      // if (this.cameraPositionIntro) {\r\n      //   this.camera.lookAt(center);\r\n      //   this.camera.position.lerp( this.cameraPositionIntro, 0.05);\r\n      // }\r\n      // this.cameraPositionHelper.position.lerp(this.cameraPosition, 0.005);\r\n      // this.cameraPositionHelper.position.copy(this.cameraPosition);\r\n\r\n      this.layers.forEach(l => l.update());\r\n    }\r\n  }\r\n\r\n  addLayer(layer) {\r\n    this.layers.push(layer);\r\n\r\n    layer.init(this.layersGroup);\r\n  }\r\n\r\n  setLayerVisibility(layer, state) {\r\n    layer.group.traverse(child => {\r\n      if (child instanceof Mesh) {\r\n        child.visible = state;\r\n      }\r\n    });\r\n  }\r\n\r\n  setLayerOpacity(layer, opacity, direction) {\r\n    layer.setOpacity(opacity, direction);\r\n  }\r\n\r\n  setCameraTargetPosition(\r\n    target,\r\n    position,\r\n    radius = DEFAULT_CAMERA_RADIUS,\r\n    height = DEFAULT_CAMERA_HEIGHT\r\n  ) {\r\n    // [x, y, z], [x, y, z]\r\n    this.cameraTarget.set(...target);\r\n    this.cameraPosition.set(...position);\r\n    this.cameraPositionTarget.set(...position);\r\n\r\n    this.cameraRadius = radius;\r\n    this.cameraHeight = height;\r\n  }\r\n\r\n  setRunning(enable = true) {\r\n    this.isEnabled = enable;\r\n  }\r\n}\r\n\r\nexport default SceneManager;\r\n","import { getTilesFromBbox, getTileSize, tile2geo } from '../utilities';\r\nimport { PI_HALF, POINT_WROCLAW_CENTER, ZOOM_TILES, PI } from '../config';\r\nimport {\r\n  Group,\r\n  LoadingManager,\r\n  Mesh,\r\n  MeshBasicMaterial,\r\n  PlaneGeometry,\r\n  Texture,\r\n  TextureLoader\r\n} from 'three';\r\nimport { TweenMax, TimelineMax } from 'gsap/all';\r\n\r\nimport Mercator from './Mercator.class';\r\n\r\nclass TileGridLayer {\r\n  constructor(bbox, tileurl, options = {}) {\r\n    this.bbox = bbox;\r\n    this.tileurl = tileurl;\r\n\r\n    this.mercator = new Mercator();\r\n    this.options = options;\r\n  }\r\n\r\n  init(group) {\r\n    this.group = new Group();\r\n    this.group.name = 'TileGridLayer.group';\r\n    group.add(this.group);\r\n\r\n    this.tileSize = getTileSize(\r\n      POINT_WROCLAW_CENTER[0],\r\n      POINT_WROCLAW_CENTER[1],\r\n      ZOOM_TILES,\r\n      this.mercator\r\n    );\r\n    this.tiles = getTilesFromBbox(\r\n      this.bbox,\r\n      ZOOM_TILES,\r\n      this.options.tileOffset\r\n    ); //.slice(0, 20);\r\n\r\n    this.initLoader();\r\n    this.initTiles();\r\n    this.initMesh();\r\n  }\r\n\r\n  destroy() {}\r\n\r\n  initLoader() {\r\n    // this.loadingManager = new LoadingManager();\r\n    // this.loadingManager.onLoad = this.onComplete.bind(this);\r\n\r\n    this.loader = new TextureLoader(this.options.loadingManager);\r\n    this.loader.crossOrigin = 'Anonymous';\r\n  }\r\n\r\n  initTiles() {\r\n    this.tiles = this.tiles.map(tile => this.createTile(tile));\r\n  }\r\n\r\n  initMesh() {\r\n    this.tiles.forEach(tile => this.createMesh(tile));\r\n  }\r\n\r\n  createTile(tile) {\r\n    const x = tile[0];\r\n    const y = tile[1];\r\n    const z = tile[2];\r\n\r\n    const coordsNW = tile2geo(x, y, z);\r\n    // const coordsSE = tile2geo(x + 1, y + 1, z);\r\n    // const coords = {\r\n    //   lat: (coordsNW.lat + coordsSE.lat) / 2,\r\n    //   lon: (coordsNW.lon + coordsSE.lon) / 2\r\n    // };\r\n\r\n    const position = this.mercator.fromGeo(coordsNW.lon, coordsNW.lat);\r\n    const url = this.tileurl(x, y, z);\r\n\r\n    return {\r\n      x,\r\n      y,\r\n      z,\r\n      rotation: 0,\r\n      position,\r\n      url\r\n    };\r\n  }\r\n\r\n  createMesh(tile) {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = 256;\r\n    canvas.height = 256;\r\n\r\n    const canvas2 = document.createElement('canvas');\r\n    canvas2.width = 256;\r\n    canvas2.height = 256;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    const ctx2 = canvas2.getContext('2d');\r\n    // ctx.fillStyle = 'white';\r\n\r\n    this.loader.load(tile.url, texture => {\r\n      const img = texture.image;\r\n      ctx.drawImage(img, 0, 0);\r\n      ctx2.drawImage(img, 0, 0);\r\n\r\n      const textureFinal = new Texture(canvas);\r\n      textureFinal.needsUpdate = true;\r\n\r\n      ctx2.globalCompositeOperation = 'difference';\r\n      ctx2.fillStyle = 'white';\r\n      ctx2.fillRect(0, 0, 256, 256);\r\n\r\n      const textureFinal2 = new Texture(canvas2);\r\n      textureFinal2.needsUpdate = true;\r\n\r\n      const geometry = new PlaneGeometry(this.tileSize, this.tileSize);\r\n      const material = new MeshBasicMaterial({\r\n        map: textureFinal,\r\n        opacity: 1,\r\n        depthTest: true\r\n      });\r\n\r\n      const materialWhite = new MeshBasicMaterial({\r\n        map: textureFinal2,\r\n        opacity: 1,\r\n        depthTest: true\r\n      });\r\n\r\n      tile.mesh = new Mesh(geometry, material);\r\n      tile.mesh2 = new Mesh(geometry, materialWhite);\r\n      // tile.mesh.visible = false;\r\n      tile.mesh.name = [tile.x, tile.y, tile.z].join('-');\r\n      tile.mesh.name2 = [tile.x, tile.y, tile.z].join('-');\r\n\r\n      tile.mesh.position.x = tile.position.x + this.tileSize / 2;\r\n      tile.mesh.position.z = tile.position.y + this.tileSize / 2;\r\n      tile.mesh.position.y =\r\n        this.options.offset === undefined ? -5 : this.options.offset;\r\n      tile.mesh.rotation.x = tile.rotation - PI_HALF;\r\n      // tile.mesh.scale.set(0.01, 0.01, 0.01);\r\n\r\n      tile.mesh2.position.x = tile.position.x + this.tileSize / 2;\r\n      tile.mesh2.position.z = tile.position.y + this.tileSize / 2;\r\n      tile.mesh2.position.y =\r\n        this.options.offset === undefined ? -5 : this.options.offset;\r\n      tile.mesh2.rotation.x = tile.rotation - PI_HALF - PI;\r\n\r\n      tile.mesh._x = tile.x;\r\n      tile.mesh._y = tile.y;\r\n      tile.mesh._z = tile.z;\r\n\r\n      // this.buildTile(tile);\r\n      this.group.add(tile.mesh);\r\n      this.group.add(tile.mesh2);\r\n    });\r\n  }\r\n\r\n  update() {}\r\n\r\n  onComplete() {\r\n    console.log('loading done...');\r\n  }\r\n\r\n  flip(visible = true) {\r\n    if (visible) {\r\n      this.tl && this.tl.kill();\r\n      this.tiles.forEach(tile => {\r\n        tile.rotation = PI;\r\n        if (tile.mesh) {\r\n          tile.mesh.rotation.x = PI - PI_HALF;\r\n          tile.mesh2.rotation.x = -PI_HALF;\r\n        }\r\n      });\r\n    } else {\r\n      this.tl && this.tl.kill();\r\n      this.tl = new TimelineMax();\r\n\r\n      this.tl.staggerTo(\r\n        this.tiles,\r\n        0.75,\r\n        {\r\n          rotation: 0,\r\n          onUpdateParams: ['{self}'],\r\n          onStart: () => {\r\n            this.flipped = false;\r\n          },\r\n          onUpdate: self => {\r\n            if (self.target.mesh) {\r\n              self.target.mesh.rotation.x = self.target.rotation - PI_HALF;\r\n              self.target.mesh2.rotation.x =\r\n                self.target.rotation - PI_HALF - PI;\r\n            }\r\n          }\r\n        },\r\n        0.01\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default TileGridLayer;\r\n","import {\r\n  Float32BufferAttribute,\r\n  BufferAttribute,\r\n  BufferGeometry,\r\n  Color,\r\n  Group,\r\n  LineSegments,\r\n  ShaderMaterial\r\n} from 'three';\r\n\r\nimport { Power2, TweenLite, TimelineMax, Bounce } from 'gsap/all';\r\n\r\nimport { scaleThreshold } from 'd3-scale';\r\n\r\n// import { pairs } from 'd3';\r\nimport Mercator from './Mercator.class';\r\nimport parse from 'csv-parse/lib/sync';\r\nimport { fromEvent, merge, empty } from 'rxjs';\r\nimport { map, switchMap, filter } from 'rxjs/operators';\r\nimport SceneService from './SceneService';\r\n\r\nconst PI = 3.14159; //26535897932384626433832795;\r\n// x y z\r\n// q r s\r\n\r\nconst vertexShader = `\r\nattribute float a_degree;\r\nattribute float a_displacement;\r\nattribute vec3 a_color;\r\n\r\nvarying vec3 color;\r\n\r\nuniform float u_hexSize;\r\nuniform float u_angle;\r\n\r\nvec2 hexToPixel(vec3 h) {\r\n  float x = u_hexSize * sqrt(3.0) * (h.x + h.y / 2.0) ;\r\n  float y = u_hexSize * 3.0 / 2.0 * h.y;\r\n  \r\n  return vec2(x, y);  \r\n}\r\n\r\nvec3 cubeRound(vec3 cube) {\r\n  float rX = floor(cube.x + 0.5);\r\n  float rY = floor(cube.y + 0.5);\r\n  float rZ = floor(cube.z + 0.5);\r\n\r\n  float xDiff = abs(rX - cube.x);\r\n  float yDiff = abs(rY - cube.y);\r\n  float zDiff = abs(rZ - cube.z);\r\n\r\n  if (xDiff > yDiff && xDiff > zDiff) {\r\n    rX = -rY - rZ;\r\n  } else if (yDiff > zDiff) {\r\n    rY = -rX - rZ;\r\n  } else {\r\n    rZ = -rX - rY;\r\n  }\r\n\r\n  return vec3(rX, rY, rZ);\r\n}\r\n\r\nvec3 pixelToHex(vec3 p) {\r\n  float q = (((p.x) * sqrt(3.0) / 3.0) / u_hexSize - ((p.z) / 3.0) / u_hexSize);\r\n  float r = (p.z) * 2.0 / 3.0 / u_hexSize;\r\n  \r\n  return vec3(q, r, -q - r);\r\n}\r\n\r\nvoid main() { \r\n  vec2 pos = hexToPixel(cubeRound(pixelToHex(position)));\r\n \r\n  float xx = pos.x;\r\n  float yy = position.y * 0.5;\r\n  float zz = pos.y;\r\n\r\n   float x = (1.0 - u_angle) * xx + \r\n     ((100.0 + 10.0 * a_displacement) * sin(a_degree * u_angle + xx/10.0 )) * u_angle;\r\n   float y = yy * (1.0 - u_angle);\r\n   float z = (1.0 - u_angle) * zz + \r\n     ((100.0 + 10.0 * a_displacement) * cos(a_degree * u_angle + zz/10.0 )) * u_angle;\r\n\r\n  color = a_color;\r\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(vec3(x, y, z), 1.0);\r\n }\r\n`;\r\n\r\nconst fragmentShader = `\r\n//Just as vertex shader, fragment shader must in the end set this variable (gl_FragColor)\r\n//We set it to a pink color.\r\nuniform vec2 u_resolution;\r\nuniform float u_time;\r\n\r\nvarying vec3 color;\r\n\r\nvoid main() {\r\n  vec2 st = gl_FragCoord.xy / u_resolution.xy;\r\n\r\n  gl_FragColor = vec4( color, 0.2);\r\n  // gl_FragColor = vec4(1.0,  // R\r\n                    //  1.0,  // G\r\n                    //  1.0,  // B\r\n                    //  1.0); // A\r\n}\r\n\r\n`;\r\n\r\nclass CSVLayer {\r\n  constructor(data, options) {\r\n    this.data = parse(data, { columns: true }); //.slice(0, 1000); //shuffleArray(parse(data)).slice(0, 5000);\r\n    console.log('points:', this.data.length);\r\n    this.options = { ...options, columns: true };\r\n\r\n    this.mercator = new Mercator();\r\n  }\r\n\r\n  init(group) {\r\n    this.group = new Group();\r\n    this.group.name = 'CSVLayer.group';\r\n    group.add(this.group);\r\n\r\n    this.createObjects();\r\n  }\r\n\r\n  destroy() {}\r\n\r\n  createObjects() {\r\n    const colors = [\r\n      0x3de6b1,\r\n      0x22ecf0,\r\n      0x19d1fd,\r\n      0x14b1fd,\r\n      0x2c7fdb,\r\n      0x3d52bf,\r\n      0x6539b3,\r\n      0xa032b2,\r\n      0xd124a9,\r\n      0xfb139c,\r\n      0xfd4dab,\r\n      0xfea7d4,\r\n      0xffffff\r\n    ].map(color => new Color(color));\r\n\r\n    const scale = scaleThreshold()\r\n      .domain([3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39])\r\n      .range(colors);\r\n\r\n    const geometry = new BufferGeometry();\r\n    const vertices = [];\r\n    const degree = new Float32Array(this.data.length * 2);\r\n    const displacement = new Float32Array(this.data.length * 2);\r\n    const v3Colors = []; //new Float32Array( this.data.length * 2 );\r\n\r\n    this.data.forEach((point, idx) => {\r\n      const { x, y } = this.mercator.fromGeo(\r\n        parseFloat(point.X),\r\n        parseFloat(point.Y)\r\n      );\r\n      const z = point.value;\r\n\r\n      vertices.push(x, 0, y);\r\n      vertices.push(x, z, y);\r\n\r\n      const d = (idx / this.data.length) * 2 * PI;\r\n      degree[idx * 2] = d;\r\n      degree[idx * 2 + 1] = d;\r\n\r\n      const r = Math.random() * 2 - 1;\r\n      displacement[idx * 2] = r;\r\n      displacement[idx * 2 + 1] = r;\r\n\r\n      const color = scale(z);\r\n\r\n      v3Colors.push(color.r, color.g, color.b);\r\n      v3Colors.push(color.r, color.g, color.b);\r\n    });\r\n\r\n    geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n    geometry.addAttribute('a_degree', new BufferAttribute(degree, 1));\r\n    geometry.addAttribute(\r\n      'a_displacement',\r\n      new BufferAttribute(displacement, 1)\r\n    );\r\n    geometry.addAttribute('a_color', new Float32BufferAttribute(v3Colors, 3));\r\n\r\n    this.uniforms = {\r\n      u_hexSize: {\r\n        type: 'f', // a float\r\n        value: 1\r\n      },\r\n      u_angle: {\r\n        type: 'f', // a float\r\n        value: 1\r\n      }\r\n    };\r\n\r\n    const material = new ShaderMaterial({\r\n      uniforms: this.uniforms,\r\n      vertexShader,\r\n      fragmentShader\r\n      // blending: AdditiveBlending\r\n    });\r\n\r\n    const mesh = new LineSegments(geometry, material);\r\n    this.group.add(mesh);\r\n\r\n    const mouseMove$ = fromEvent(document, 'mousemove');\r\n\r\n    mouseMove$.pipe(\r\n        map(ev => {\r\n          const x =\r\n            (ev.pageX - window.scrollX - window.innerWidth / 2) /\r\n            (window.innerWidth / 2);\r\n          const y =\r\n            (ev.pageY - window.scrollY - window.innerHeight / 2) /\r\n            (window.innerHeight / 2);\r\n\r\n          return Math.max(x, y); // Math.hypot(p.x, p.y) / Math.SQRT2;\r\n        })\r\n    ).subscribe(x => {\r\n      this.uniforms.u_hexSize.value = x * 10;\r\n    });\r\n\r\n\r\n    this.tl = TweenLite.fromTo(\r\n      this.uniforms.u_angle,\r\n      1,\r\n      { value: 1 },\r\n      {\r\n        value: 0,\r\n        paused: true\r\n      }\r\n    );\r\n  }\r\n\r\n  setProgress(p) {\r\n    // this.tl.progress(p);\r\n    // this.uniforms.u_angle.value = 1 - p;\r\n    // const o = {\r\n    // value: this.uniforms.u_angle.value\r\n    // }\r\n  }\r\n\r\n  show() {\r\n    TweenLite.to(this.tl, 2.5, { progress: 1, ease: Power2.easeInOut });\r\n  }\r\n\r\n  hide() {\r\n    TweenLite.to(this.tl, 1.5, {\r\n      progress: 0,\r\n      ease: Bounce.easeOut\r\n    });\r\n  }\r\n\r\n  update() {}\r\n}\r\n\r\nexport default CSVLayer;\r\n","import {\r\n  AdditiveBlending,\r\n  BufferGeometry,\r\n  Group,\r\n  Geometry,\r\n  LineBasicMaterial,\r\n  LineSegments,\r\n  ExtrudeGeometry,\r\n  FileLoader,\r\n  Color,\r\n  Float32BufferAttribute,\r\n  Mesh,\r\n  MeshBasicMaterial,\r\n  Shape,\r\n  Points,\r\n  DoubleSide,\r\n  Vector3,\r\n  PointsMaterial,\r\n  VertexColors\r\n} from 'three';\r\nimport { featureEach } from '@turf/meta';\r\nimport { coordAll, centroid, getCoords, getType, polygon, getCoord } from '@turf/turf';\r\nimport { TweenLite, TimelineMax, SteppedEase, Power2, Bounce, Elastic, SlowMo, Back } from 'gsap/all';\r\nimport { scaleThreshold } from 'd3-scale';\r\n\r\nimport { pairs } from 'd3';\r\nimport Mercator from './Mercator.class';\r\nimport { PI_HALF } from '../config';\r\n\r\nconst colors = [\r\n  0x3de6b1,\r\n  0x22ecf0,\r\n  0x19d1fd,\r\n  0x14b1fd,\r\n  0x2c7fdb,\r\n  0x3d52bf,\r\n  0x6539b3,\r\n  0xa032b2,\r\n  0xd124a9,\r\n  0xfb139c,\r\n  0xfd4dab,\r\n  0xfea7d4,\r\n  0xffffff\r\n].map(\r\n  color =>\r\n    new MeshBasicMaterial({\r\n      color,\r\n      side: DoubleSide\r\n    })\r\n);\r\n\r\nconst scale = scaleThreshold()\r\n  .domain([3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39])\r\n  .range(colors);\r\n\r\nconst defaultOptions = {\r\n  transform: data => data\r\n};\r\n\r\nclass GeoJsonLayer {\r\n  constructor(url, options) {\r\n    this.url = url;\r\n    this.options = { ...defaultOptions, ...options };\r\n\r\n    this.mercator = new Mercator();\r\n    this.animations = [];\r\n\r\n    this.points = [];\r\n    this.colors = [];\r\n  }\r\n\r\n  init(group) {\r\n    this.group = new Group();\r\n    this.group.name = 'GeoJsonLayer.group';\r\n    group.add(this.group);\r\n\r\n    this.initLoader();\r\n    this.load();\r\n\r\n    this.initMaterials();\r\n  }\r\n\r\n  initLoader() {\r\n    this.loader = new FileLoader(this.options.loadingManager);\r\n  }\r\n\r\n  initMaterials() {\r\n    this.material = new LineBasicMaterial({\r\n      color: this.options.color || 0x67fefe,\r\n      blending: AdditiveBlending,\r\n      opacity: 1, // this.options.opacity || 1,\r\n      transparent: true\r\n    });\r\n    \r\n    this.pointMaterial = new PointsMaterial( { size: 15, vertexColors: VertexColors } );\r\n  }\r\n\r\n  load() {\r\n    this.loader.load(this.url, data => {\r\n      this.data = this.options.transform(JSON.parse(data));\r\n      featureEach(this.data, (feature, id) => getType(feature) === 'Point' ? this.createPoint(feature, id) : this.createMesh(feature, id));\r\n      this.createMeshPoints();\r\n    });\r\n  }\r\n\r\n  destroy() {}\r\n\r\n  createPoint(feature) {\r\n    const coords = getCoord(feature);\r\n    const point = this.mercator.fromGeo(\r\n      coords[0],\r\n      coords[1]\r\n    );\r\n    const color = new Color(feature.properties.color || 0x2ecc71);\r\n\r\n\r\n    this.points.push(point.x, feature.properties.altitude || this.options.altitude || 0, point.y);\r\n    this.colors.push(color.r, color.g, color.b);\r\n  }\r\n\r\n  createMeshPoints() {\r\n    const pointsGeometry = new BufferGeometry();\r\n\r\n    pointsGeometry.addAttribute( 'position', new Float32BufferAttribute( this.points, 3 ) );\r\n    pointsGeometry.addAttribute( 'color', new Float32BufferAttribute( this.colors, 3 ) );\r\n    pointsGeometry.computeBoundingSphere();\r\n\r\n    const pointsMesh = new Points( pointsGeometry, this.pointMaterial );\r\n    this.group.add(pointsMesh);\r\n\r\n    // var particles = 10;\r\n    // var geometry = new BufferGeometry();\r\n    // var positions = [];\r\n    // var colors = [];\r\n    // var color = new Color();\r\n    // var n = 1000, n2 = n / 2; // particles spread in the cube\r\n    // for ( var i = 0; i < particles; i ++ ) {\r\n    //   // positions\r\n    //   var x = Math.random() * n - n2;\r\n    //   var y = Math.random() * n - n2;\r\n    //   var z = Math.random() * n - n2;\r\n    //   positions.push( x, y, z );\r\n    //   // colors\r\n    //   var vx = ( x / n ) + 0.5;\r\n    //   var vy = ( y / n ) + 0.5;\r\n    //   var vz = ( z / n ) + 0.5;\r\n    //   color.setRGB( vx, vy, vz );\r\n    //   colors.push( color.r, color.g, color.b );\r\n    // }\r\n    // geometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\r\n    // geometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n    // geometry.computeBoundingSphere();\r\n    // //\r\n    // var material = new PointsMaterial( { size: 15, vertexColors: VertexColors } );\r\n    // const points = new Points( geometry, material );\r\n    \r\n\r\n    // console.log(this.points);\r\n\r\n    // this.group.add(points);\r\n\r\n  }\r\n\r\n  createMesh(feature, id) {\r\n    const geometry = new Geometry();\r\n\r\n\r\n      const shapeCentroid = getCoords(centroid(feature));\r\n      const coords = coordAll(feature);\r\n\r\n      const centerPoint = this.mercator.fromGeo(\r\n        shapeCentroid[0],\r\n        shapeCentroid[1]\r\n      );\r\n\r\n      if (this.options.fill) {\r\n        throw new Error('Fill not supported!');\r\n        // const shape = new Shape();\r\n\r\n        // const points = coords[0].map(c => this.mercator.fromGeo(c[0], c[1]));\r\n\r\n        // const startPoint = points.shift();\r\n        // shape.moveTo(\r\n        //   startPoint.x - centerPoint.x,\r\n        //   startPoint.y - centerPoint.y\r\n        // );\r\n        // points.forEach(p => {\r\n        //   shape.lineTo(p.x - centerPoint.x, p.y - centerPoint.y);\r\n        // });\r\n\r\n        // const geometry = new ExtrudeGeometry(shape, {\r\n        //   amount: -5, //-feature.properties.value,\r\n        //   bevelEnabled: true,\r\n        //   bevelSegments: 2,\r\n        //   steps: 2,\r\n        //   bevelSize: 1,\r\n        //   bevelThickness: 1\r\n        // });\r\n\r\n        // const mesh = new Mesh(geometry, scale(feature.properties.value));\r\n\r\n        // mesh.position.set(centerPoint.x, 0, centerPoint.y);\r\n        // mesh.rotation.x = PI_HALF;\r\n\r\n        // this.group.add(mesh);\r\n      } else {\r\n        const points = coords.map(c => {\r\n          const p = this.mercator.fromGeo(c[0], c[1]);\r\n          return new Vector3(p.x - centerPoint.x, 0, p.y - centerPoint.y);\r\n        });\r\n\r\n        pairs(points, (a, b) => geometry.vertices.push(a, b));\r\n\r\n        const mesh = new LineSegments(geometry, this.material);\r\n        mesh.position.set(centerPoint.x, feature.properties.altitude || this.options.altitude || 0, centerPoint.y);\r\n        this.group.add(mesh);\r\n\r\n        if (!this.options.controlAnimation) {\r\n          mesh.scale.set(0.001, 1, 0.001);\r\n\r\n          const o = {\r\n            _rotation: -PI_HALF/2 +  -PI_HALF/100 * id,\r\n            _scale: 0.001\r\n          };\r\n\r\n          TweenLite.to(o, 2.50, {\r\n            _rotation: 0,\r\n            _scale: 1,\r\n            delay: this.options.stagger ? 1 + id * this.options.staggerOffset : 0,\r\n            ease: Elastic.easeOut.config(1, 0.74), //Bounce.easeOut,\r\n            // ease: Elastic.easeIn.config(1, 0.3), //Bounce.easeOut,\r\n            // ease: SlowMo.ease.config(0.7, 0.7, false),\r\n            // ease: Back.easeInOut.config(1.7), \r\n            onUpdate: t => {\r\n              // mesh.rotation.x = o._rotation;\r\n              // mesh.rotation.z = -o._rotation;\r\n              mesh.rotation.y = o._rotation;\r\n              mesh.scale.set(o._scale, 1, o._scale);\r\n              mesh.material.opacity = o._scale * (this.options.opacity || 0.3);\r\n            }\r\n          });\r\n\r\n        } else {\r\n          mesh.scale.set(0.001, 1, 0.001);\r\n\r\n          const o = {\r\n            _scale: 0.001\r\n          };\r\n\r\n          const tl = new TimelineMax({\r\n            paused: true\r\n          }).to(o, 1.0, {\r\n            _scale: 1,\r\n            delay: this.options.stagger ? 1 + id * this.options.staggerOffset : 0,\r\n            ease: SteppedEase.config(10),\r\n            onUpdate: t => {\r\n              mesh.scale.set(o._scale, 1, o._scale);\r\n              mesh.material.opacity = o._scale * (this.options.opacity || 0.3);\r\n            }\r\n          });\r\n\r\n          this.animations.push(tl);\r\n        }\r\n      }\r\n  }\r\n\r\n  setProgress(p) {\r\n    this.animations.forEach(tl => {\r\n      tl.seek(p * tl.totalDuration(), false);\r\n    });\r\n  }\r\n\r\n  update() {}\r\n}\r\n\r\nexport default GeoJsonLayer;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { from } from 'rxjs';\r\nimport {\r\n  map,\r\n  filter,\r\n  distinctUntilChanged,\r\n  switchMap,\r\n  scan,\r\n  tap\r\n} from 'rxjs/operators';\r\n\r\nimport {\r\n  featureCollection,\r\n  lineString,\r\n  centroid,\r\n  featureEach\r\n} from '@turf/turf';\r\n\r\nimport SceneManager from '../../classes/SceneManager.class';\r\nimport TileGridLayer from '../../classes/TileGridLayer.class';\r\nimport {\r\n  BBOX_WROCLAW,\r\n  // BBOX_WROCLAW_CENTRE,\r\n  // TILE_URL_OSM,\r\n  // TILE_URL_LOCAL,\r\n  TILE_URL_CARTO_DARK,\r\n  SECTION_CAMERA_POSITIONS,\r\n  SECTIONS\r\n  // TILE_URL_OSM,\r\n  // TILE_URL_ESRI,\r\n  // TILE_URL_ORTO_2018\r\n} from '../../config';\r\nimport CSVLayer from '../../classes/CSVLayer.class';\r\n// import SurfaceLayer from '../../classes/SurfaceLayer.class';\r\nimport GeoJsonLayer from '../../classes/GeoJsonLayer.class';\r\nimport SceneService from '../../classes/SceneService';\r\n// import ImageLayer from '../../classes/ImageLayer.class';\r\n// import ObjectLayer from '../../classes/ObjectLayer.class';\r\n// import SceneService from '../../classes/SceneService';\r\n\r\nconst defaultProps = {\r\n  debug: false\r\n};\r\n\r\nconst wrapperStyle = {\r\n  position: 'fixed',\r\n  width: '100%',\r\n  height: '100%',\r\n  overflow: 'hidden'\r\n};\r\n\r\nconst canvasStyle = {\r\n  position: 'absolute',\r\n  width: '100%',\r\n  height: '100%'\r\n};\r\n\r\nclass SceneContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.canvasRef = React.createRef();\r\n    this.onResize = this.onResize.bind(this);\r\n  }\r\n\r\n  onResize() {\r\n    const {\r\n      width,\r\n      height\r\n    } = this.canvasRef.current.parentElement.getBoundingClientRect();\r\n\r\n    this.canvasRef.current.width = width;\r\n    this.canvasRef.current.height = height;\r\n    this.sceneManager && this.sceneManager.onResize(width, height);\r\n  }\r\n\r\n  initEvents() {\r\n    window.addEventListener('resize', this.onResize, false);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const options = {\r\n      ...this.props\r\n    };\r\n\r\n    this.sceneManager = new SceneManager(this.canvasRef.current, options);\r\n    this.onResize();\r\n    !!this.props.debug ? this.initDebug() : this.initLayers();\r\n\r\n    // Handle streams\r\n    SceneService.sceneSwitch$.subscribe(scene => {\r\n      const targetPosition = SECTION_CAMERA_POSITIONS[scene];\r\n      if (targetPosition) {\r\n        this.sceneManager.setCameraTargetPosition(\r\n          targetPosition.target,\r\n          targetPosition.position,\r\n          targetPosition.radius,\r\n          targetPosition.height\r\n        );\r\n      }\r\n    });\r\n\r\n    // Animate pause / play\r\n    SceneService.running$.subscribe(enabled =>\r\n      this.sceneManager.setRunning(enabled)\r\n    );\r\n\r\n    // animate camera to new point on ENTER to new section\r\n    SceneService.sceneProgress$\r\n      .pipe(\r\n        filter(val => !!val.section && val.position === 'inside'),\r\n        scan((acc, curr) => ({ ...acc, [curr.section]: curr.progress }), {}),\r\n        map(o =>\r\n          Math.max(...Object.values(o)) === 0\r\n            ? SECTIONS.zero\r\n            : Object.keys(o)\r\n                .map(key => ({ name: key, value: o[key] }))\r\n                .reduce((prev, current) => {\r\n                  return prev.value > current.value ? prev : current;\r\n                }).name\r\n        ),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(SceneService.sceneSwitch$);\r\n\r\n    SceneService.sceneProgress$\r\n      .pipe(\r\n        filter(val => val.section === SECTIONS.intro && val.progress),\r\n        distinctUntilChanged(),\r\n        map(val => val.progress)\r\n      )\r\n      .subscribe(SceneService.introCamera$);\r\n\r\n    this.initEvents();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.sceneManager.destroy();\r\n    // TODO: remove event listeners\r\n  }\r\n\r\n  initLayers() {\r\n    const tilelayer = new TileGridLayer(BBOX_WROCLAW, TILE_URL_CARTO_DARK, {\r\n      loadingManager: this.sceneManager.loadingManager,\r\n      offset: -0,\r\n      tileOffset: 2\r\n    });\r\n    this.sceneManager.addLayer(tilelayer);\r\n\r\n    SceneService.sceneProgress$\r\n      .pipe(\r\n        filter(val => val.section === SECTIONS.s1),\r\n        map(val => val.progress > 0.4),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(p => {\r\n        SceneService.flip$.next(p);\r\n        !p && tilelayer.flip(false);\r\n      });\r\n\r\n    SceneService.flipMidPoint$.subscribe(value => {\r\n      tilelayer.flip(value);\r\n    });\r\n\r\n    const boundslayer = new GeoJsonLayer(\r\n      `${process.env.PUBLIC_URL}/assets/wroclaw-osiedla-simplified.geo.json`,\r\n      {\r\n        loadingManager: this.sceneManager.loadingManager,\r\n        controlAnimation: true\r\n      }\r\n    );\r\n    this.sceneManager.addLayer(boundslayer);\r\n\r\n    axios\r\n      .get(`${process.env.PUBLIC_URL}/assets/centroidy.csv`)\r\n      .then(response => {\r\n        const centroidsLayer = new CSVLayer(response.data);\r\n        this.sceneManager.addLayer(centroidsLayer);\r\n\r\n        SceneService.sceneProgress$\r\n          .pipe(\r\n            filter(val => val.section === SECTIONS.s1),\r\n            map(val => val.progress > 0.4),\r\n            distinctUntilChanged()\r\n          )\r\n          .subscribe(p => {\r\n            p ? centroidsLayer.show() : centroidsLayer.hide();\r\n          });\r\n      });\r\n\r\n    SceneService.introCamera$.subscribe(p => boundslayer.setProgress(p));\r\n  }\r\n\r\n  initDebug() {\r\n    const pois = new GeoJsonLayer(\r\n      `${process.env.PUBLIC_URL}/assets/geojson/poi.json`,\r\n      {\r\n        opacity: 0.5,\r\n        color: 0x67fefe,\r\n        loadingManager: this.sceneManager.loadingManager,\r\n        controlAnimation: false,\r\n        altitude: 2,\r\n        transform: data => {\r\n          const collection = [];\r\n\r\n          featureEach(data, feature => {\r\n            const c = centroid(feature);\r\n\r\n            if (\r\n              ['school', 'kindergarten'].includes(feature.properties.amenity)\r\n            ) {\r\n              c.properties.color = '#3498db';\r\n            }\r\n\r\n            if (feature.properties.shop !== undefined) {\r\n              c.properties.color = '#e74c3c';\r\n            }\r\n\r\n            if (\r\n              [\r\n                'restaurant',\r\n                'cafe',\r\n                'fast_food',\r\n                'biergarten',\r\n                'bar',\r\n                'pub'\r\n              ].includes(feature.properties.amenity)\r\n            ) {\r\n              c.properties.color = '#f1c40f';\r\n            }\r\n\r\n            collection.push(c);\r\n          });\r\n\r\n          return featureCollection(collection);\r\n        }\r\n      }\r\n    );\r\n    this.sceneManager.addLayer(pois);\r\n\r\n    const parks = new GeoJsonLayer(\r\n      `${process.env.PUBLIC_URL}/assets/geojson/leisure_park.geojson`,\r\n      {\r\n        opacity: 0.4,\r\n        color: 0x2ecc71,\r\n        loadingManager: this.sceneManager.loadingManager,\r\n        controlAnimation: false,\r\n        altitude: 2\r\n      }\r\n    );\r\n    this.sceneManager.addLayer(parks);\r\n\r\n    const roads = new GeoJsonLayer(\r\n      `${process.env.PUBLIC_URL}/assets/geojson/roads.geojson`,\r\n      {\r\n        opacity: 0.4,\r\n        color: 0x2980b9,\r\n        loadingManager: this.sceneManager.loadingManager,\r\n        controlAnimation: false,\r\n        altitude: 2\r\n      }\r\n    );\r\n    this.sceneManager.addLayer(roads);\r\n    /*\r\n    const trams = new GeoJsonLayer(\r\n      `${process.env.PUBLIC_URL}/assets/mpk/trams.json`,\r\n      {\r\n        stagger: true,\r\n        staggerOffset: 0.03,\r\n        opacity: 0.5,\r\n        color: 0x67fefe,\r\n        loadingManager: this.sceneManager.loadingManager,\r\n        controlAnimation: false,\r\n        transform: data => {\r\n          const collection = [];\r\n\r\n          data.forEach((line, idx) => {\r\n            const shape = line.directions[0].lineDirectionShapes.shapesList.find(\r\n              shape => shape.mainShape === true\r\n            ).shapeCoordinates;\r\n            const coords = shape.map(p => [p.x_lon, p.y_lat]);\r\n\r\n            const feature = lineString(coords);\r\n            feature.properties.altitude = 10 + idx / 3;\r\n\r\n            collection.push(feature);\r\n          });\r\n\r\n          return featureCollection(collection);\r\n        }\r\n      }\r\n    );\r\n    this.sceneManager.addLayer(trams);\r\n\r\n    const buses = new GeoJsonLayer(\r\n      `${process.env.PUBLIC_URL}/assets/mpk/buses.json`,\r\n      {\r\n        stagger: true,\r\n        staggerOffset: 0.03,\r\n        opacity: 0.5,\r\n        color: 0x3498db,\r\n        loadingManager: this.sceneManager.loadingManager,\r\n        controlAnimation: false,\r\n        transform: data => {\r\n          const collection = [];\r\n\r\n          data.forEach((line, idx) => {\r\n            const shape = line.directions[0].lineDirectionShapes.shapesList.find(\r\n              shape => shape.mainShape === true\r\n            ).shapeCoordinates;\r\n            const coords = shape.map(p => [p.x_lon, p.y_lat]);\r\n\r\n            const feature = lineString(coords);\r\n            feature.properties.altitude = 10 + idx;\r\n\r\n            collection.push(feature);\r\n          });\r\n\r\n          return featureCollection(collection);\r\n        }\r\n      }\r\n    );\r\n    this.sceneManager.addLayer(buses);\r\n*/\r\n    const tilelayer = new TileGridLayer(BBOX_WROCLAW, TILE_URL_CARTO_DARK, {\r\n      loadingManager: this.sceneManager.loadingManager,\r\n      offset: -0,\r\n      tileOffset: 2\r\n    });\r\n    this.sceneManager.addLayer(tilelayer);\r\n    this.sceneManager.loadingManager.onLoad = () => {\r\n      // tilelayer.flip();\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={wrapperStyle}>\r\n        <canvas ref={this.canvasRef} style={canvasStyle} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSceneContainer.defaultProps = defaultProps;\r\n\r\nexport default SceneContainer;\r\n","import React, { Component } from 'react';\r\nimport { fromEvent, Subject } from 'rxjs';\r\nimport {\r\n  map,\r\n  distinctUntilChanged,\r\n  bufferCount,\r\n  pairwise\r\n} from 'rxjs/operators';\r\n\r\nimport * as Rematrix from 'rematrix';\r\n\r\nimport style from './CursorParallax.module.css';\r\n\r\nconst SPEED = 4;\r\nconst START = 10;\r\nconst END = 300;\r\nconst scaleFn = p =>\r\n  1 - Math.max(Math.min((p - START) / (END - START), 1), 0) * 0.5;\r\n\r\nclass CursorParallax extends Component {\r\n  state = {\r\n    x: 0,\r\n    y: 0\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.initEvents = this.initEvents.bind(this);\r\n    this.unsetEvents = this.unsetEvents.bind(this);\r\n    this.loop = this.loop.bind(this);\r\n\r\n    this.cursorRef = React.createRef();\r\n    this.containerRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initEvents();\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.unsetEvents();\r\n  }\r\n\r\n  initEvents() {\r\n    this.mouseMove$ = fromEvent(window, 'mousemove', { passive: true });\r\n\r\n    this.mouseMove$.subscribe(({ clientX, clientY }) => {\r\n      this.target = { x: clientX, y: clientY };\r\n    });\r\n\r\n    this.cursorVisible = new Subject();\r\n\r\n    this.cursorVisible\r\n      .pipe(\r\n        map(val => {\r\n          return val < 25;\r\n        }),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(visible => {\r\n        this.cursorRef.current.classList.toggle(style.active, !visible);\r\n      });\r\n\r\n    this.raf = requestAnimationFrame(this.loop);\r\n  }\r\n\r\n  loop() {\r\n    if (this.target) {\r\n      const bbox = this.cursorRef.current.getBoundingClientRect();\r\n      const bboxC = this.containerRef.current.getBoundingClientRect();\r\n\r\n      const cPos = [bboxC.x, bboxC.y];\r\n\r\n      const tPos = [\r\n        this.target.x - bbox.width / 2 + 10,\r\n        this.target.y - bbox.height / 2 + 10\r\n      ];\r\n\r\n      const pos = [\r\n        cPos[0] + (tPos[0] - cPos[0]) / SPEED,\r\n        cPos[1] + (tPos[1] - cPos[1]) / SPEED\r\n      ];\r\n\r\n      const diff = Math.hypot(tPos[0] - cPos[0], tPos[1] - cPos[1]);\r\n      const angle =\r\n        Math.atan2(tPos[0] - cPos[0], -(tPos[1] - cPos[1])) * (180 / Math.PI);\r\n      const scaleX = scaleFn(diff);\r\n\r\n      const transform = [\r\n        Rematrix.rotateZ(angle),\r\n        Rematrix.scaleX(scaleX)\r\n      ].reduce(Rematrix.multiply);\r\n\r\n      this.cursorRef.current.style.transform = Rematrix.toString(transform);\r\n\r\n      this.containerRef.current.style.transform = Rematrix.toString(\r\n        Rematrix.translate(pos[0], pos[1])\r\n      );\r\n      this.cursorVisible.next(diff);\r\n    }\r\n    requestAnimationFrame(this.loop);\r\n  }\r\n\r\n  unsetEvents() {}\r\n\r\n  render() {\r\n    return (\r\n      <div className={style.wrapper}>\r\n        <div className={style.container} ref={this.containerRef}>\r\n          <div className={style.cursor} ref={this.cursorRef} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CursorParallax;\r\n\r\nfunction lerp(ratio, start, end) {\r\n  return start + (end - start) * ratio;\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport SceneService from '../../classes/SceneService';\r\nimport CursorParallax from '../CursorParallax';\r\nimport style from './Overlay.module.css';\r\n\r\nconst PI = 3.14159; //2653589793;\r\nconst PROGRESS_SIZE = 70;\r\nconst PROGRESS_WIDTH = 2;\r\n\r\nfunction useObservable(observable, initialValue) {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  useEffect(() => {\r\n    const subscription = observable.subscribe(newValue => {\r\n      setValue(newValue);\r\n    });\r\n    return () => subscription.unsubscribe();\r\n  }, []);\r\n\r\n  return value;\r\n}\r\n\r\nconst Progress = ({ p }) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [step, setStep] = useState(0);\r\n  const [total, setTotal] = useState(0);\r\n  const [position, setPosition] = useState(0);\r\n\r\n  const circumference = 2 * PI * (PROGRESS_SIZE / 2);\r\n  const progressProps = {\r\n    strokeDasharray: circumference,\r\n    strokeDashoffset: circumference * (1 - progress)\r\n  };\r\n\r\n  const calculateProgress = () => {\r\n    const body = document.body;\r\n    const html = document.documentElement;\r\n\r\n    const totalHeight = Math.max(\r\n      body.scrollHeight,\r\n      body.offsetHeight,\r\n      html.clientHeight,\r\n      html.scrollHeight\r\n    );\r\n    const top = window.pageYOffset || document.documentElement.scrollTop;\r\n    const viewPortHeight = document.body.scrollHeight;\r\n\r\n    setProgress(top / (totalHeight - viewPortHeight));\r\n\r\n    const sections = document.querySelectorAll('section');\r\n    const minMax = findMinMax(\r\n      Array.from(sections)\r\n        .map((sectionEl, idx) => {\r\n          const bbox = sectionEl.getBoundingClientRect();\r\n          return { idx: idx, pos: bbox.top };\r\n        })\r\n        .filter(s => s.pos >= -viewPortHeight * 0.5),\r\n      'pos'\r\n    );\r\n\r\n    if (minMax.min) {\r\n      setStep(minMax.min.idx);\r\n      setTotal(sections.length - 1);\r\n      setPosition((minMax.min.idx / (sections.length - 1)) * (viewPortHeight * 0.8));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', calculateProgress, false);\r\n\r\n    calculateProgress();\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', calculateProgress);\r\n    };\r\n  }, []);\r\n\r\n  const lineProps = {\r\n    x1: PROGRESS_SIZE / 2 + PROGRESS_SIZE / 10,\r\n    y1: PROGRESS_SIZE / 2 - PROGRESS_SIZE / 6,\r\n    x2: PROGRESS_SIZE / 2 - PROGRESS_SIZE / 10,\r\n    y2: PROGRESS_SIZE / 2 + PROGRESS_SIZE / 6\r\n  };\r\n\r\n  const svgStyle = {\r\n    top: `${position + 0}px`,\r\n    opacity: step > 0 ? 1 : 0\r\n  };\r\n\r\n  return (\r\n    <svg\r\n      className={style.progress}\r\n      width={PROGRESS_SIZE}\r\n      height={PROGRESS_SIZE}\r\n      viewBox={`0 0 ${PROGRESS_SIZE} ${PROGRESS_SIZE}`}\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      style={svgStyle}\r\n    >\r\n      <circle\r\n        opacity=\"0.25\"\r\n        cx={PROGRESS_SIZE / 2}\r\n        cy={PROGRESS_SIZE / 2}\r\n        r={PROGRESS_SIZE / 2 - PROGRESS_WIDTH}\r\n        fill=\"#000\"\r\n        stroke=\"#3DE6B1\"\r\n        strokeWidth=\"2\"\r\n      />\r\n      <circle\r\n        className={style.progressCircle}\r\n        opacity=\"1\"\r\n        cx={PROGRESS_SIZE / 2}\r\n        cy={PROGRESS_SIZE / 2}\r\n        r={PROGRESS_SIZE / 2 - PROGRESS_WIDTH}\r\n        stroke=\"#3DE6B1\"\r\n        strokeWidth=\"2\"\r\n        {...progressProps}\r\n      />\r\n      <line {...lineProps} stroke=\"#3DE6B1\" />\r\n      <text\r\n        x={PROGRESS_SIZE / 2 - PROGRESS_SIZE / 8}\r\n        y={PROGRESS_SIZE / 2 - PROGRESS_SIZE / 6}\r\n        dy=\".3em\"\r\n      >\r\n        {Math.max(step, 1)}\r\n      </text>\r\n      <text\r\n        x={PROGRESS_SIZE / 2 + PROGRESS_SIZE / 8}\r\n        y={PROGRESS_SIZE / 2 + PROGRESS_SIZE / 6}\r\n        dy=\".3em\"\r\n      >\r\n        {total}\r\n      </text>\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst ScrollDown = () => {\r\n  return (\r\n    <svg\r\n      className={style.scrollDown}\r\n      width=\"42\"\r\n      height=\"53\"\r\n      viewBox=\"0 0 42 53\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <g className={style.arrows}>\r\n        <path\r\n          d=\"M23.7718 33.7504L20.9998 36.5488L18.2278 33.7504C17.8918 33.4112 17.3878 33.4112 17.0518 33.7504C16.7158 34.0896 16.7158 34.5984 17.0518 34.9376L20.4118 38.3296C20.5798 38.4992 20.7898 38.584 20.9998 38.584C21.2098 38.584 21.4198 38.4992 21.5878 38.3296L24.9478 34.9376C25.2838 34.5984 25.2838 34.0896 24.9478 33.7504C24.6118 33.4112 24.1078 33.4112 23.7718 33.7504Z\"\r\n          fill=\"#fff\"\r\n        />\r\n        <path\r\n          d=\"M24.9478 29.0864C24.6118 28.7472 24.1078 28.7472 23.7718 29.0864L20.9998 31.8848L18.2278 29.0864C17.8918 28.7472 17.3878 28.7472 17.0518 29.0864C16.7158 29.4256 16.7158 29.9344 17.0518 30.2736L20.4118 33.6656C20.5798 33.8352 20.7898 33.92 20.9998 33.92C21.2098 33.92 21.4198 33.8352 21.5878 33.6656L24.9478 30.2736C25.2838 29.9344 25.2838 29.4256 24.9478 29.0864Z\"\r\n          fill=\"#fff\"\r\n        />\r\n      </g>\r\n      <path\r\n        d=\"M28.5604 19.08V11.448C28.5604 7.25038 25.1584 3.81598 21.0004 3.81598C16.8424 3.81598 13.4404 7.25038 13.4404 11.448V19.08C13.4404 23.2776 16.8424 26.712 21.0004 26.712C25.1584 26.712 28.5604 23.2776 28.5604 19.08ZM21.0004 25.016C17.7664 25.016 15.1204 22.3448 15.1204 19.08V11.448C15.1204 8.18318 17.7664 5.51198 21.0004 5.51198C24.2344 5.51198 26.8804 8.18318 26.8804 11.448V19.08C26.8804 22.3448 24.2344 25.016 21.0004 25.016Z\"\r\n        fill=\"#fff\"\r\n      />\r\n      <path\r\n        className={style.wheel}\r\n        d=\"M21.0002 8.47998C20.5382 8.47998 20.1602 8.86158 20.1602 9.32798V11.872C20.1602 12.3384 20.5382 12.72 21.0002 12.72C21.4622 12.72 21.8402 12.3384 21.8402 11.872V9.32798C21.8402 8.86158 21.4622 8.47998 21.0002 8.47998Z\"\r\n        fill=\"#fff\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nconst Overlay = () => {\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <Progress/>\r\n      <CursorParallax />\r\n      <ScrollDown />\r\n    </div>\r\n  );\r\n};\r\n\r\nOverlay.displayName = 'Overlay';\r\n\r\nexport default Overlay;\r\n\r\nfunction findMinMax(arr, key) {\r\n  let min = arr[0],\r\n    max = arr[0];\r\n\r\n  for (let i = 1, len = arr.length; i < len; i++) {\r\n    let v = arr[i];\r\n    min = v[key] < min[key] ? v : min;\r\n    max = v[key] > max[key] ? v : max;\r\n  }\r\n\r\n  return { min, max };\r\n}\r\n","import React, {\r\n  useRef,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useCallback,\r\n  useState\r\n} from 'react';\r\nimport { TweenMax, Power2, TimelineLite } from 'gsap';\r\n\r\nimport classnames from 'classnames';\r\n\r\nimport styles from './Lines.module.css';\r\n\r\nconst defaultProps = {\r\n  length: 5\r\n};\r\n\r\nconst Lines = ({ length, observable, midPoint }) => {\r\n  const containerEl = useRef(null);\r\n  const [elements, setElements] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    const els = Array.from(containerEl.current.querySelectorAll('div'));\r\n    setElements(els);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let tl;\r\n    const subscription = observable.subscribe(value => {\r\n      if (value === true) {\r\n        tl = new TimelineLite()\r\n          .staggerTo(\r\n            shuffle(elements),\r\n            1.0,\r\n            {\r\n              y: '0%',\r\n              ease: Power2.easeInOut\r\n            },\r\n            0.1,\r\n            '+=0',\r\n            () => {\r\n              midPoint.next(true);\r\n            }\r\n          )\r\n          .staggerTo(\r\n            shuffle(elements),\r\n            0.75,\r\n            {\r\n              y: '100%',\r\n              ease: Power2.easeInOut\r\n            },\r\n            0.02\r\n          );\r\n      } else {\r\n        if (tl) {\r\n          tl.kill();\r\n          \r\n          tl = new TimelineLite();\r\n          tl.staggerTo(\r\n            shuffle(elements),\r\n            0.75,\r\n            {\r\n              y: '100%',\r\n              ease: Power2.easeInOut\r\n            },\r\n            0.02\r\n          );\r\n        }\r\n\r\n        midPoint.next(false);\r\n      }\r\n    });\r\n\r\n    return () => subscription.unsubscribe();\r\n  }, [elements]);\r\n\r\n  const renderGrid = () => {\r\n    return Array.from({ length }).map((_, idx) => (\r\n      <div key={idx} className={styles.item} />\r\n    ));\r\n  };\r\n\r\n  return (\r\n    // <div className={classnames(styles.container, { [styles.flip]: value})}>\r\n    <div ref={containerEl} className={styles.container}>\r\n      {renderGrid()}\r\n    </div>\r\n  );\r\n};\r\n\r\nLines.defaultProps = defaultProps;\r\n\r\nexport default Lines;\r\n\r\nfunction shuffle(array) {\r\n  let counter = array.length;\r\n\r\n  // While there are elements in the array\r\n  while (counter > 0) {\r\n    // Pick a random index\r\n    let index = Math.floor(Math.random() * counter);\r\n\r\n    // Decrease counter by 1\r\n    counter--;\r\n\r\n    // And swap the last element with it\r\n    let temp = array[counter];\r\n    array[counter] = array[index];\r\n    array[index] = temp;\r\n  }\r\n\r\n  return array;\r\n}\r\n","import React from 'react';\r\n\r\nimport './Heading.css';\r\n\r\nconst Heading = ({ title, subtitle, children }) => (\r\n  <div className=\"heading\">\r\n    <h1>{title}</h1>\r\n    <span>{subtitle}</span>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Heading;\r\n","import React from 'react';\r\n\r\nimport './Page.css';\r\n\r\nconst Page = ({ className, render }) => {\r\n  return <div className={`page ${className}`}>{render()}</div>;\r\n};\r\n\r\nexport default Page;\r\n","import React from 'react';\r\n\r\nimport styles from './Databox.module.css';\r\n\r\nconst Databox = ({ title, unit, value }) => {\r\n  return (\r\n    <div className={styles.databox}>\r\n      <span className={`${styles.value} ${!unit && styles.valueSpan}`}>{value}</span>\r\n      {unit && <span className={styles.unit}>{unit}</span>}\r\n      <span className={styles.title}>{title}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Databox;\r\n","import React, { useState } from 'react';\r\n\r\nimport SlotInfo from '../SlotInfo';\r\n\r\nconst defaultState = {\r\n  slot: true,\r\n  test: false,\r\n  other: true\r\n};\r\n\r\nconst Playground = () => {\r\n  const [state, setState] = useState(defaultState);\r\n\r\n  const stateKeys = Object.keys(state);\r\n  const toggle = key => setState({...state, [key]: !state[key]});\r\n\r\n  return (\r\n    <>\r\n      {stateKeys.map(key => (\r\n        <span>\r\n          <label for={key}>{ key }:</label>\r\n          <input type=\"checkbox\" id={key} key={key} checked={state[key]} onChange={() => toggle(key)} />\r\n        </span>\r\n      ))}\r\n      <hr />\r\n\r\n      { state.slot && <SlotInfo title=\"population\" value=\"639 248\" info=\"4th biggest city in Poland\" /> }\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Playground;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport queryString from 'query-string';\n\nimport { Subject, timer } from 'rxjs';\nimport { takeWhile, endWith } from 'rxjs/operators';\n\nimport './App.css';\nimport Intro from './components/Intro';\n\nimport Intersection from './components/Intersection';\nimport SceneContainer from './components/SceneContainer';\nimport Overlay from './components/Overlay/Overlay';\nimport Lines from './components/Lines';\nimport SceneService from './classes/SceneService';\nimport Heading from './components/Heading';\nimport Page from './components/Page';\nimport Databox from './components/Databox';\nimport Playground from './components/Playground';\n\nimport { SECTIONS } from './config';\n\nclass App extends Component {\n  state = {\n    enabledScene: true,\n    enabledFrame: false,\n    enabledAnimate: false,\n    enabledLerp: true,\n    progress: 0,\n    radius: 0,\n    loaded: false\n  };\n\n  sectionProgress$ = new Subject();\n  enter$ = new Subject();\n  exit$ = new Subject();\n\n  componentDidMount() {\n    // response for loading$ subject -> pass progress to loader component\n    const progress$ = SceneService.loading$\n      .pipe(\n        takeWhile(val => val < 1),\n        endWith(1)\n      )\n      .subscribe(\n        val => {\n          console.log('loading:', val); // TODO: create progress component\n          //this.setState({ loaded: true });\n          // SceneService.running$.next(true);\n        },\n        null,\n        () => {\n          this.setState({ loaded: true });\n          SceneService.running$.next(true);\n        }\n      );\n\n    // change background when flipp color\n    SceneService.flip$.subscribe(value => {\n      document.body.className = value ? 'flip' : '';\n    });\n\n    // TODO: remove it\n    // timer(0, 2000).subscribe(value => {\n    //   SceneService.flip$.next(value % 2 === 0);\n    // });\n  }\n\n  onIntersect(section, intersect) {\n    SceneService.sceneProgress$.next({ section, ...intersect });\n  }\n\n  render() {\n    const MainApp = () => (\n      <>\n        {/* <Overlay /> */}\n        <Lines\n          length={7}\n          observable={SceneService.flip$}\n          midPoint={SceneService.flipMidPoint$}\n        />\n        {this.state.enabledScene && <SceneContainer />}\n        {/* {this.state.enabledFrame && <Frame />} */}\n        <main>\n          <Intersection\n            ratio={0.5}\n            render={progress => (\n              <section>\n                <Intro progress={progress} />\n              </section>\n            )}\n          />\n          {this.state.loaded && (\n            <>\n              <Intersection\n                onProgress={intersect =>\n                  this.onIntersect(SECTIONS.intro, intersect)\n                }\n                render={({ progress, position }) => (\n                  <section className=\"s1\">\n                    <Page\n                      className=\"page-Intro\"\n                      render={() => (\n                        <>\n                          <Heading\n                            title=\"Wroclaw data\"\n                            subtitle=\"Wroclaw - the meeting place\"\n                          />\n                          <div className=\"content\">\n                            <div className=\"description\">\n                              Wroclaw is one of the oldest and most attractive\n                              Polish cities, situated on the Oder River with 12\n                              islands and 112 bridges including the Grunwald\n                              Bridge built in 1910, which used to be the longest\n                              suspension bridge in Europe. The city is rich in\n                              remarkable works of art and architecture. Since\n                              Wroclaw is one of the most dynamic cultural\n                              centres in Poland, it has won the bid for The\n                              European Capital of Culture 2016.\n                            </div>\n                            <div className=\"data-boxes\">\n                              <Databox title=\"area\" value=\"292,8\" unit=\"km2\" />\n                              <Databox\n                                title=\"48 of neighborhoods\"\n                                value=\"5 disctricts\"\n                              />\n                              <Databox\n                                title=\"population\"\n                                value=\"639,3k\"\n                                unit=\"people\"\n                              />\n                              <Databox title=\"companies\" value=\"129 935\" />\n                            </div>\n                          </div>\n                        </>\n                      )}\n                    />\n                  </section>\n                )}\n              />\n              <Intersection\n                onProgress={intersect =>\n                  this.onIntersect(SECTIONS.s1, intersect)\n                }\n                render={({ progress, position }) => (\n                  <section className=\"s1\">\n                    <Page\n                      className=\"page-Intro\"\n                      render={() => (\n                        <>\n                          <Heading\n                            title=\"Finding place to live\"\n                            subtitle=\"some caption here\"\n                          />\n                          <div className=\"content\" />\n                        </>\n                      )}\n                    />\n                  </section>\n                )}\n              />\n\n              <section />\n              <section />\n              <section />\n            </>\n          )}\n        </main>\n      </>\n    );\n\n    const Debug = props => {\n      const options = queryString.parse(props.location.search);\n\n      return (\n        <>\n          <Lines\n            observable={SceneService.flip$}\n            midPoint={SceneService.flipMidPoint$}\n          />\n          <SceneContainer debug={true} {...options} />\n          {/* <main>{JSON.stringify(options)}</main> */}\n        </>\n      );\n    };\n\n    return (\n      <Router>\n        <div className=\"app\">\n          <Route path=\"/\" exact component={MainApp} />\n          <Route path=\"/debug\" exact component={Debug} />\n          <Route path=\"/playground\" exact component={Playground} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// import 'antd/dist/antd.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SlotInfo_wrapper__TnxJR\",\"slot\":\"SlotInfo_slot__1sNHm\",\"strOld\":\"SlotInfo_strOld__2atab\",\"strNew\":\"SlotInfo_strNew__1SNK3\",\"anim\":\"SlotInfo_anim__3JqJZ\",\"aside\":\"SlotInfo_aside__1PBDq\",\"headline\":\"SlotInfo_headline__2NV38\",\"headlineOld\":\"SlotInfo_headlineOld__227r2\",\"headlineNew\":\"SlotInfo_headlineNew__3lLra\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Overlay_wrapper__2wrAL\",\"progress\":\"Overlay_progress__31HYz\",\"progressCircle\":\"Overlay_progressCircle__27p5d\",\"scrollDown\":\"Overlay_scrollDown__2JSyJ\",\"arrows\":\"Overlay_arrows__3L7ss\",\"moveDown\":\"Overlay_moveDown__1vZyx\",\"wheel\":\"Overlay_wheel__3EoVc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"databox\":\"Databox_databox__S9PLQ\",\"value\":\"Databox_value__2-7CK\",\"valueSpan\":\"Databox_valueSpan__3_AVM\",\"unit\":\"Databox_unit__1MWZ3\",\"title\":\"Databox_title__1jnfq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Intro_wrapper__TgOw6\",\"title\":\"Intro_title__3ptw4\",\"cta\":\"Intro_cta__Jamsy\",\"cta-ghost\":\"Intro_cta-ghost__1UvQK\",\"info\":\"Intro_info__30GDd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cursor\":\"CursorParallax_cursor__14cNF\",\"active\":\"CursorParallax_active__3J2um\",\"container\":\"CursorParallax_container__3oWIn\",\"wrapper\":\"CursorParallax_wrapper__Rq-RK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Lines_container__1X-Ix\",\"flip\":\"Lines_flip__3qSaW\",\"item\":\"Lines_item__3A6jZ\"};"],"sourceRoot":""}