{"version":3,"sources":["classes/CameraControls.class.js","classes/Mercator.class.js","config.js","utilities/geo.utilities.js","classes/SceneManager.class.js","classes/CSVLayer.class.js","classes/GeoJsonLayer.class.js","classes/SceneService.js","components/SceneContainer/SceneContainer.js","components/Frame/Frame.js","components/Scrollr/Scrollr.js","components/CursorParallax/CursorParallax.js","App.js","serviceWorker.js","index.js","components/CursorParallax/CursorParallax.module.css","components/SceneContainer/SceneContainer.module.css","components/Frame/Frame.module.css"],"names":["instance","CameraControls","camera","nodeEl","enabled","arguments","length","undefined","Object","classCallCheck","this","controls","OrbitControls","enableDamping","dampingFactor","rotateSpeed","autoRotateSpeed","minPolarAngle","maxPolarAngle","Math","PI","update","EARTH_RADIUS","POINT_WROCLAW_CENTER","deg2rad","deg","rad2deg","rad","Mercator","center","factor","lon","Array","isArray","lat","latInRadians","k","radius","inLon","inLat","b","sin","cos","x","log","y","atan","tan","px","py","D","sinh","asin","cosh","SceneManager","Vector3","canvasEl","console","canvas","dimensions","width","height","layers","init","destroyed","c","window","cancelAnimationFrame","raf","document","removeEventListener","onKeyDown","forEach","l","destroy","initScene","initRenderer","initCamera","initMercator","initHelpers","initControls","initEvents","loop","_this","render","requestAnimationFrame","scene","Scene","layersGroup","Group","name","add","AxesHelper","gridHelper","GridHelper","position","setY","material","blending","AdditiveBlending","opacity","transparent","geometry","OctahedronGeometry","MeshNormalMaterial","cameraPositionHelper","Mesh","renderer","WebGLRenderer","alpha","antialias","setClearColor","shadowMap","soft","setPixelRatio","devicePixelRatio","setSize","innerWidth","innerHeight","cameraTargetPosition","aspectRatio","PerspectiveCamera","set","cameraTarget","cameraControls","loadCameraFromLS","cameraMove$","fromEvent","passive","pipe","map","mouseEvent","clientX","clientY","subscribe","_ref","bind","addEventListener","mercator","JSON","parse","localStorage","getItem","concat","target","copy","object","zoom","setItem","stringify","e","keyCode","saveControlsLS","layer","push","state","group","traverse","child","visible","direction","setOpacity","CSVLayer","data","options","columns","objectSpread","createObjects","colors","color","Color","scale","scaleThreshold","domain","range","uniforms","u_scaleZ","type","value","u_circle","u_circle2","u_resolution","BufferGeometry","vertices","degree","Float32Array","displacement","v3Colors","point","idx","_this$mercator$fromGe","fromGeo","parseFloat","X","Y","z","d","r","random","g","addAttribute","Float32BufferAttribute","BufferAttribute","ShaderMaterial","vertexShader","fragmentShader","mesh","LineSegments","o","TimelineMax","repeat","repeatDelay","yoyo","onUpdate","t","to","ease","Power2","easeInOut","timeEnd","MeshBasicMaterial","side","DoubleSide","GeoJsonLayer","geojson","featureEach","feature","id","createMesh","_this2","Geometry","polygons","getType","getCoords","coords","polygonId","polyCentroid","getCoord","centroid","polygon","centerPoint","fill","shape","Shape","points","startPoint","shift","moveTo","p","lineTo","ExtrudeGeometry","amount","bevelEnabled","bevelSegments","steps","bevelSize","bevelThickness","properties","rotation","pairs","a","LineBasicMaterial","pos","_scale","TweenLite","delay","SteppedEase","config","meshDuplicate","clone","setHex","classes_SceneService","SceneService","sceneSwitch$","Subject","sceneProgress$","SceneContainer","_Component","_getPrototypeOf2","_len","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","canvasRef","React","createRef","inherits","createClass","key","sceneManager","current","initLayers","axios","get","process","then","response","boundslayer","addLayer","centroidsLayer","react_default","createElement","className","styles","wrapper","ref","Component","paths","frameSize","Frame","rect","svg","path","getBoundingClientRect","setState","animateShapeOutTimeline","anime","timeline","duration","easing","targets","vievbox","x1","y1","x2","y2","offset","stopColor","POSITION","Scrollr","props","progress","refEl","scrollableParent","subscriptions","handleScroll","assertThisInitialized","renderArgs","subscription","unsubscribe","getScrollableParent","scroll$","event","bounds","getBounds","previousPosition","currentPosition","getPosition","cbArgs","topOffsetPx","pointEnd","viewportBottom","viewportTop","pTop","max","min","waypointTop","pBottom","waypointBottom","onProgress","onEnter","onLeave","contextHeight","contextScrollTop","parentElement","horizontal","_parentElement$getBou","left","top","right","bottom","offsetWidth","offsetHeight","_this$props","bottomOffset","computeOffsetPixels","topOffset","node","parentNode","body","style","getComputedStyle","overflow","getPropertyValue","_this$props2","children","cloneElement","isElement","pixelOffset","str","isNaN","isFinite","slice","parseOffsetAsPixels","percentOffset","parseOffsetAsPercentage","defaultProps","horizontalll","displayName","App","enabledScene","enabledFrame","toggle","handleWaypointEnter","handleWaypointLeave","handleWaypointProgress","propname","defineProperty","next","_ref2","onClick","Frame_Frame","SceneContainer_SceneContainer","Boolean","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","cursor","active"],"mappings":"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","file":"static/js/main.3d62794f.chunk.js","sourcesContent":["import OrbitControls from 'orbit-controls-es6';\r\n\r\nlet instance;\r\nclass CameraControls {\r\n  constructor(camera, nodeEl, enabled = true) {\r\n    if (instance) {\r\n      return instance;\r\n    }\r\n\r\n    this.controls = new OrbitControls(camera, nodeEl);\r\n    this.controls.enabled = enabled;\r\n    this.controls.enableDamping = true;\r\n    this.controls.dampingFactor = 0.1;\r\n    this.controls.rotateSpeed = 0.2;\r\n    // this.controls.autoRotate = true;\r\n    this.controls.autoRotateSpeed = 0.1;\r\n    // this.controls.enableZoom = false;\r\n\r\n    this.controls.minPolarAngle = 0; // radians\r\n    this.controls.maxPolarAngle = Math.PI / 2 - 0 * (Math.PI / 180); // radians\r\n\r\n    instance = this;\r\n  }\r\n\r\n  enable() {\r\n    this.controls.enabled = true;\r\n  }\r\n\r\n  disable() {\r\n    this.controls.enabled = false;\r\n  }\r\n\r\n  update() {\r\n    this.controls.update();\r\n  }\r\n}\r\n\r\nexport default CameraControls;\r\n","import { EARTH_RADIUS } from '../config';\r\nimport { deg2rad, rad2deg } from '../utilities';\r\n\r\nlet instance;\r\n\r\nclass Mercator {\r\n  constructor(center, factor = 1) {\r\n    if (instance) {\r\n      return instance;\r\n    }\r\n\r\n    this.lon = Array.isArray(center) ? center[0] : center.lon;\r\n    this.lat = Array.isArray(center) ? center[1] : center.lat;\r\n\r\n    this.latInRadians = deg2rad(this.lat);\r\n    this.k =  factor;\r\n    this.radius = EARTH_RADIUS;\r\n\r\n    instance = this;\r\n  }\r\n\r\n  fromGeo(inLon, inLat) {\r\n    const lat = deg2rad(inLat);\r\n    const lon = deg2rad(inLon - this.lon);\r\n    const b = Math.sin(lon) * Math.cos(lat);\r\n    const x = 0.5 * this.k * this.radius * Math.log((1 + b) / (1 - b));\r\n    const y =\r\n      -this.k *\r\n      this.radius *\r\n      (Math.atan(Math.tan(lat) / Math.cos(lon)) - this.latInRadians);\r\n\r\n    return {\r\n      x,\r\n      y,\r\n    };\r\n  };\r\n\r\n  fromXY(px, py) {\r\n    const x = px / (this.k * this.radius);\r\n    const y = py / (this.k * this.radius);\r\n    const D = y + this.latInRadians;\r\n\r\n    let lon = Math.atan(Math.sinh(x) / Math.cos(D));\r\n    let lat = Math.asin(Math.sin(D) / Math.cosh(x));\r\n\r\n    lon = this.lon + rad2deg(lon);\r\n    lat = rad2deg(lat);\r\n\r\n    return { lat, lon };\r\n  };\r\n\r\n\r\n}\r\n\r\nexport default Mercator;\r\n\r\n","// Lat = Y Long = X\r\n// wroclaw\r\n// lat: 51.107883\r\n// lon: 17.038538\r\n\r\n// bbox = left, bottom, right, top\r\n// bbox = min Longitude , min Latitude , max Longitude , max Latitude\r\n// box =  minX, minY, maxX, maxY\r\n\r\nexport const PI = 3.14159;\r\n\r\nexport const PI_HALF = 1.5707963;\r\n\r\nexport const EARTH_RADIUS = 6378137;\r\n\r\nexport const BBOX_WROCLAW = [\r\n  16.80552829,\r\n  51.040649965,\r\n  17.177328263,\r\n  51.212286538\r\n];\r\n\r\nexport const POINT_WROCLAW_CENTER = [17.038538, 51.107883];\r\n\r\nexport const ZOOM_TILES = 13;\r\n\r\nexport const URL_PROXY = 'http://localhost:8080/';\r\n\r\nexport const TILE_URL_OSM = (x, y, z) =>\r\n  `${URL_PROXY}https://a.tile.openstreetmap.org/${z}/${x}/${y}.png`;\r\n\r\nexport const TILE_URL_LOCAL = (x, y, z) =>\r\n  `${URL_PROXY}http://localhost:1337/${z}/${x}/${y}.png`;\r\n\r\nexport const TILE_URL_CARTO_DARK = (x, y, z) =>\r\n  `${URL_PROXY}https://a.basemaps.cartocdn.com/dark_all/${z}/${x}/${y}.png`;\r\n\r\nexport const TILE_URL_ESRI = (x, y, z) =>\r\n  `${URL_PROXY}https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/${z}/${y}/${x}`;\r\n\r\nexport const TILE_URL_ORTO_2018 = (x, y, z) =>\r\n  `${process.env.PUBLIC_URL}/assets/tiles/${z}/${x}/${y}.png`;\r\n","const PI = 3.14159;\r\n// const PI_HALF = 1.5707963;\r\n\r\nexport const deg2rad = deg => {\r\n  return (deg * PI) / 180;\r\n};\r\n\r\nexport const rad2deg = rad => {\r\n  return (rad * 180) / PI;\r\n};\r\n\r\nexport const lon2tile = (lon, zoom) =>\r\n  Math.floor(((lon + 180) / 360) * Math.pow(2, zoom));\r\n\r\nexport const lat2tile = (lat, zoom) =>\r\n  Math.floor(\r\n    ((1 -\r\n      Math.log(\r\n        Math.tan((lat * Math.PI) / 180) + 1 / Math.cos((lat * Math.PI) / 180)\r\n      ) /\r\n        Math.PI) /\r\n      2) *\r\n      Math.pow(2, zoom)\r\n  );\r\n\r\n// Lat = Y Long = X\r\nexport const lonlat2XY = (lon, lat, zoom) => {\r\n  return [lon2tile(lon, zoom), lat2tile(lat, zoom), zoom];\r\n};\r\n\r\nexport const getTilesFromBbox = (bbox, zoom, offset = 0) => {\r\n  // T1 = LEFT TOP\r\n  //      min lon, max lat\r\n  // T2 = RIGHT BOTTOM\r\n  //      max lon, min lat\r\n\r\n  const t1 = lonlat2XY(bbox[0], bbox[3], zoom);\r\n  const t2 = lonlat2XY(bbox[2], bbox[1], zoom);\r\n\r\n  if (offset) {\r\n    t1[0] = t1[0] - offset;\r\n    t1[1] = t1[1] - offset;\r\n    t2[0] = t2[0] + offset;\r\n    t2[1] = t2[1] + offset;\r\n  }\r\n\r\n  console.log({ offset });\r\n  console.log(t1);\r\n  console.log(t2);\r\n\r\n  const tX = Math.abs(t1[0] - t2[0]) + 1;\r\n  const tY = Math.abs(t1[1] - t2[1]) + 1;\r\n  const tc = [Math.abs(t1[0] + t2[0]) / 2, Math.abs(t1[1] + t2[1]) / 2];\r\n\r\n  const tiles = [];\r\n  for (let ix = 0; ix < tX; ix++) {\r\n    for (let iy = 0; iy < tY; iy++) {\r\n      const x = t1[0] + ix;\r\n      const y = t1[1] + iy;\r\n      const z = zoom;\r\n\r\n      const tile = [x, y, z];\r\n\r\n      tiles.push(tile);\r\n    }\r\n  }\r\n\r\n  // sort from center\r\n  tiles.sort((ta, tb) => {\r\n    return (\r\n      Math.hypot(ta[0] - tc[0], ta[1] - tc[1]) -\r\n      Math.hypot(tb[0] - tc[0], tb[1] - tc[1])\r\n    );\r\n  });\r\n\r\n  return tiles;\r\n};\r\n\r\nexport const getTileSize = (lon, lat, zoom, mercator) => {\r\n  const tile = lonlat2XY(lon, lat, zoom);\r\n\r\n  const coordsNW = tile2geo(tile[0], tile[1], zoom);\r\n  const coordsSE = tile2geo(tile[0] + 1, tile[1] + 1, zoom);\r\n\r\n  const posNW = mercator.fromGeo(coordsNW.lon, coordsNW.lat);\r\n  const posSE = mercator.fromGeo(coordsSE.lon, coordsSE.lat);\r\n\r\n  return Math.ceil(Math.abs(posNW.x - posSE.x));\r\n};\r\n\r\nexport const tile2geo = (x, y, z) => {\r\n  const n = Math.PI - (2 * Math.PI * y) / Math.pow(2, z);\r\n  const lat = (180 / Math.PI) * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\r\n  const lon = (x / Math.pow(2, z)) * 360 - 180;\r\n\r\n  return {\r\n    lon,\r\n    lat\r\n  };\r\n};\r\n","import {\r\n  AdditiveBlending,\r\n  AxesHelper,\r\n  GridHelper,\r\n  Mesh,\r\n  Group,\r\n  Scene,\r\n  WebGLRenderer,\r\n  // OrthographicCamera,\r\n  PerspectiveCamera,\r\n  Vector3,\r\n  OctahedronGeometry,\r\n  MeshNormalMaterial\r\n} from 'three';\r\nimport CameraControls from './CameraControls.class';\r\nimport Mercator from './Mercator.class';\r\nimport { POINT_WROCLAW_CENTER, PI_HALF } from '../config';\r\nimport { fromEvent } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { deg2rad } from '../utilities';\r\n\r\nconst nearPlane = 10;\r\nconst farPlane = 50000;\r\nconst fieldOfView = 20;\r\nconst LS_PREFIX = 'wroclovedata_';\r\n\r\nconst center = new Vector3(0, 0, 0);\r\nconst cameraRadius = 2500;\r\n\r\nclass SceneManager {\r\n  constructor(canvasEl) {\r\n    console.log('SceneManager()');\r\n    this.canvas = canvasEl;\r\n    this.dimensions = {\r\n      width: canvasEl.width,\r\n      height: canvasEl.height\r\n    };\r\n\r\n    this.layers = [];\r\n\r\n    this.init();\r\n    this.destroyed = false;\r\n  }\r\n\r\n  destroy() {\r\n    console.log('destroy:', this.c);\r\n    this.destroyed = true;\r\n    window.cancelAnimationFrame(this.raf);\r\n\r\n    document.removeEventListener('keydown', this.onKeyDown, false);\r\n    this.layers.forEach(l => l.destroy());\r\n  }\r\n\r\n  init() {\r\n    this.initScene();\r\n    this.initRenderer();\r\n    this.initCamera();\r\n\r\n    this.initMercator();\r\n    this.initHelpers();\r\n    this.initControls();\r\n    this.initEvents();\r\n\r\n    this.loop();\r\n  }\r\n\r\n  loop() {\r\n    if (!this.destroyed) {\r\n      this.update();\r\n      this.render();\r\n      this.raf = window.requestAnimationFrame(() => this.loop());\r\n    }\r\n  }\r\n\r\n  initScene() {\r\n    this.scene = new Scene();\r\n    this.layersGroup = new Group();\r\n    this.layersGroup.name = 'main_group';\r\n\r\n    this.scene.add(this.layersGroup);\r\n    \r\n  }\r\n\r\n  initHelpers() {\r\n    const axisHelper = new AxesHelper(1000);\r\n    const gridHelper = new GridHelper(100000, 1000, 0x1abc9c, 0x1abc9c);\r\n    gridHelper.position.setY(0);\r\n    gridHelper.material.blending = AdditiveBlending;\r\n    gridHelper.material.opacity = 0.1;\r\n    gridHelper.material.transparent = true;\r\n\r\n    // this.scene.add(axisHelper);\r\n    this.scene.add(gridHelper);\r\n\r\n\r\n    const geometry = new OctahedronGeometry(10);\r\n    const material = new MeshNormalMaterial();\r\n\r\n    this.cameraPositionHelper = new Mesh(geometry, material);\r\n    // this.scene.add(this.cameraPositionHelper);\r\n\r\n  }\r\n\r\n  initRenderer() {\r\n    const renderer = new WebGLRenderer({\r\n      canvas: this.canvas,\r\n      alpha: true,\r\n      antialias: false\r\n    });\r\n    renderer.setClearColor(0xffffff, 0);\r\n\r\n    renderer.shadowMap.soft = false;\r\n    renderer.shadowMap.enabled = true;\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n    this.renderer = renderer;\r\n  }\r\n\r\n  initCamera() {\r\n    this.cameraTargetPosition = new Vector3(0, 3000, 0);\r\n    const aspectRatio = this.canvas.width / this.canvas.height;\r\n    // const DPR = window.devicePixelRatio || 1;\r\n\r\n    this.camera = new PerspectiveCamera(\r\n      fieldOfView,\r\n      aspectRatio,\r\n      nearPlane,\r\n      farPlane\r\n    );\r\n\r\n    // this.camera = new OrthographicCamera(\r\n    // this.canvas.width / - 2, this.canvas.width / 2, this.canvas.height / 2, this.canvas.height / - 2, nearPlane, farPlane\r\n    // );\r\n\r\n    // this.cameraTarget = new Vector3(0, 0, 0);\r\n// \r\n    this.camera.position.set(100, 100, 50);\r\n    // this.camera.lookAt(this.cameraTarget);d\r\n  }\r\n\r\n  initControls() {\r\n    this.cameraTarget = new Vector3(0, 0, 0);\r\n    this.camera.position.set(674.4484878333734, 699.3695242813109, 1679.9599093246045);\r\n\r\n    this.cameraControls = new CameraControls(this.camera, this.canvas);\r\n    this.loadCameraFromLS();\r\n    \r\n    this.cameraControls.update();\r\n\r\n    const width = window.innerWidth;\r\n    const height = window.innerHeight;\r\n\r\n    this.cameraMove$ = fromEvent(window, 'mousemove', { passive: true});\r\n    this.cameraMove$\r\n    .pipe(map( mouseEvent => {\r\n      const { clientX, clientY} = mouseEvent;\r\n      \r\n      const x = -1 + (clientX / width) * 2;\r\n      const y = -1 + (clientY / height) * 2;\r\n\r\n      return {x, y};\r\n    }))\r\n    .subscribe(({x, y}) => {\r\n      // this.camera.rotation.y = x * PI_HALF;\r\n      const angleX = deg2rad(x * 30);\r\n      const height = 2500 - (1500 * y);\r\n\r\n      // console.log('angleX:', angleX);\r\n\r\n      // this.cameraPosition.x = cameraRadius * Math.sin(angleX);\r\n      // this.cameraPosition.z = cameraRadius * Math.cos(angleX);\r\n      // this.cameraPosition.y = height;\r\n\r\n\r\n      // console.log('x:', cameraRadius * Math.sin(angleX))\r\n      // console.log('z:', cameraRadius * Math.cos(angleX))\r\n\r\n      /*const newPoint = this.cameraTargetPosition.clone();\r\n\r\n      this.cameraTargetPosition.copy(newPoint);*/\r\n    })\r\n\r\n  }\r\n\r\n  initEvents() {\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n    document.addEventListener('keydown', this.onKeyDown, false);\r\n  }\r\n\r\n  initMercator() {\r\n    this.mercator = new Mercator(POINT_WROCLAW_CENTER, 0.1);\r\n  }\r\n\r\n  loadCameraFromLS() {\r\n    const controls = JSON.parse(localStorage.getItem(`${LS_PREFIX}_controls`));\r\n\r\n    if (controls && this.cameraControls) {\r\n      this.cameraControls.controls.target.copy(controls.target);\r\n      this.cameraControls.controls.object.position.copy(controls.position);\r\n      this.cameraControls.controls.object.zoom = controls.zoom;\r\n    }\r\n  }\r\n\r\n  saveControlsLS() {\r\n    const controls = {\r\n      target: this.cameraControls.controls.target,\r\n      position: this.cameraControls.controls.object.position,\r\n      zoom: this.cameraControls.controls.object.zoom\r\n    };\r\n\r\n    console.log('controls', { controls });\r\n    localStorage.setItem(`${LS_PREFIX}_controls`, JSON.stringify(controls));\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    switch (e.keyCode) {\r\n      case 83: {\r\n        // key: s\r\n        this.saveControlsLS();\r\n\r\n        break;\r\n      }\r\n      case 68: {\r\n        // key: d\r\n        console.log('LOAD camera from LS <==');\r\n        this.loadCameraFromLS();\r\n        break;\r\n      }\r\n      case 87: {\r\n        // this.makeScreenshot();\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n\r\n  update() {\r\n    this.cameraControls.update();\r\n\r\n    // this.camera.lookAt(center);\r\n    // this.camera.position.lerp( this.cameraPosition, 0.005);\r\n    // this.cameraPositionHelper.position.lerp(this.cameraPosition, 0.005);\r\n    // this.cameraPositionHelper.position.copy(this.cameraPosition);\r\n\r\n    this.layers.forEach(l => l.update());\r\n  }\r\n\r\n  addLayer(layer) {\r\n    this.layers.push(layer);\r\n\r\n    layer.init(this.layersGroup);\r\n    \r\n    // this.setLayerVisibility(layer, false);\r\n  }\r\n\r\n  setLayerVisibility(layer, state) {\r\n    layer.group.traverse(child => {\r\n      if (child instanceof Mesh) {\r\n        child.visible = state;\r\n      }\r\n    });\r\n  }\r\n\r\n  setLayerOpacity(layer, opacity, direction) {\r\n    layer.setOpacity(opacity, direction);\r\n  }\r\n}\r\n\r\nexport default SceneManager;\r\n","import {\r\n  Float32BufferAttribute,\r\n  BufferAttribute,\r\n  BufferGeometry,\r\n  Color,\r\n  AdditiveBlending,\r\n  Group,\r\n  Geometry,\r\n  LineBasicMaterial,\r\n  Line,\r\n  LineSegments,\r\n  ExtrudeGeometry,\r\n  Mesh,\r\n  MeshBasicMaterial,\r\n  ShaderMaterial,\r\n  // MeshNormalMaterial,\r\n  // OctahedronGeometry,\r\n  Shape,\r\n  Vector3\r\n} from 'three';\r\n// import { featureEach } from '@turf/meta';\r\n// import { centroid, getCoords, getType, polygon, getCoord } from '@turf/turf';\r\nimport {\r\n  TweenLite,\r\n  TweenMax,\r\n  Power2,\r\n  Bounce,\r\n  Elastic,\r\n  SteppedEase,\r\n  TimelineMax\r\n} from 'gsap/all';\r\nimport { scaleLinear, scaleThreshold, scaleQuantize } from 'd3-scale';\r\n\r\n// import { pairs } from 'd3';\r\nimport Mercator from './Mercator.class';\r\nimport { PI_HALF } from '../config';\r\nimport parse from 'csv-parse/lib/sync';\r\nimport { attribute } from 'postcss-selector-parser';\r\n\r\nconst PI = 3.14159; //26535897932384626433832795;\r\n\r\nconst vertexShader = `\r\nattribute float a_degree;\r\nattribute float a_displacement;\r\nattribute vec3 a_color;\r\n\r\n// varying float r;\r\n// varying float g;\r\n// varying float b;\r\nvarying vec3 color;\r\n\r\nuniform float u_scaleZ;\r\nuniform float u_circle;\r\nuniform float u_circle2;\r\n\r\nvoid main() { \r\n  //Every vertex shader must eventually set 'gl_Position' \r\n  //And in this case, we multiply the vertex position with the camera view and screen matrix to get the final output. \r\n\r\n  float d = a_degree;\r\n\r\n  // float x = (1.0 - u_circle) * position.x + \r\n  //   ((1000.0 + 10.0 * a_displacement) * sin(a_degree * u_circle2 + position.x/10.0 )) * u_circle;\r\n  // float y = position.y * u_scaleZ + 20.0 * u_circle;\r\n  // float z = (1.0 - u_circle) * position.z + \r\n  //   ((1000.0 + 10.0 * a_displacement) * cos(a_degree * u_circle2 + position.z/10.0 )) * u_circle;\r\n\r\n  float x = (1.0 - u_circle) * position.x + \r\n    ((2000.0 + 100.0 * a_displacement) * sin(a_degree * u_circle2)) * u_circle;\r\n    \r\n  float y = (position.y * 0.5) * u_scaleZ;\r\n\r\n  float z = (1.0 - u_circle) * position.z + \r\n    ((2000.0 + 100.0 * a_displacement) * cos(a_degree * u_circle2)) * u_circle;\r\n\r\n\r\n  // float s = sqrt(pow(position.x, 2.0) + pow(position.y, 2.0)) * 0.1;\r\n  // float x = (1.0 - u_circle) * position.x / (1.0 + (s * u_circle)); \r\n  // float y = (1.0 - u_circle) * position.y;// + s * position.y * u_circle;\r\n  // float z = (1.0 - u_circle) * position.z / (1.0 + (s * u_circle));\r\n\r\n  \r\n  color = a_color;\r\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(vec3(x, y, z), 1.0);\r\n }\r\n`;\r\n\r\nconst fragmentShader = `\r\n//Just as vertex shader, fragment shader must in the end set this variable (gl_FragColor)\r\n//We set it to a pink color.\r\nuniform vec2 u_resolution;\r\nuniform float u_time;\r\n\r\nvarying vec3 color;\r\n\r\nvoid main() {\r\n  vec2 st = gl_FragCoord.xy / u_resolution.xy;\r\n\r\n  gl_FragColor = vec4( color, 1.0);\r\n  // gl_FragColor = vec4(1.0,  // R\r\n                    //  1.0,  // G\r\n                    //  1.0,  // B\r\n                    //  1.0); // A\r\n}\r\n`;\r\n\r\nclass CSVLayer {\r\n  constructor(data, options) {\r\n    this.data = parse(data, { columns: true }); //.slice(0, 1000); //shuffleArray(parse(data)).slice(0, 5000);\r\n    console.log('points:', this.data.length);\r\n    this.options = { ...options, columns: true };\r\n\r\n    this.mercator = new Mercator();\r\n  }\r\n\r\n  init(group) {\r\n    this.group = new Group();\r\n    this.group.name = 'CSVLayer.group';\r\n    group.add(this.group);\r\n\r\n    this.createObjects();\r\n  }\r\n\r\n  destroy() {}\r\n\r\n  createObjects() {\r\n    const colors = [\r\n      0x3de6b1,\r\n      0x22ecf0,\r\n      0x19d1fd,\r\n      0x14b1fd,\r\n      0x2c7fdb,\r\n      0x3d52bf,\r\n      0x6539b3,\r\n      0xa032b2,\r\n      0xd124a9,\r\n      0xfb139c,\r\n      0xfd4dab,\r\n      0xfea7d4,\r\n      0xffffff\r\n    ].map(\r\n      color => new Color(color)\r\n      /*new LineBasicMaterial({\r\n          color,\r\n          opacity: 0.5,\r\n          blending: AdditiveBlending,\r\n          transparent: true\r\n        })*/\r\n    );\r\n\r\n    const scale = scaleThreshold()\r\n      .domain([3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39])\r\n      .range(colors);\r\n\r\n    const uniforms = {\r\n      u_scaleZ: {\r\n        type: 'f', // a float\r\n        value: 0\r\n      },\r\n      u_circle: {\r\n        type: 'f', // a float\r\n        value: 1\r\n      },\r\n      u_circle2: {\r\n        type: 'f', // a float\r\n        value: 1\r\n      },\r\n      u_resolution: {\r\n        type: 'v2',\r\n        value: { x: window.innerWidth, y: window.innerHeight }\r\n      }\r\n    };\r\n\r\n    const geometry = new BufferGeometry();\r\n    const vertices = [];\r\n    const degree = new Float32Array(this.data.length * 2);\r\n    const displacement = new Float32Array(this.data.length * 2);\r\n    const v3Colors = []; //new Float32Array( this.data.length * 2 );\r\n\r\n    this.data.forEach((point, idx) => {\r\n      const { x, y } = this.mercator.fromGeo(\r\n        parseFloat(point.X),\r\n        parseFloat(point.Y)\r\n      );\r\n      const z = point.value;\r\n\r\n      vertices.push(x, 0, y);\r\n      vertices.push(x, z, y);\r\n      // geometry.vertices.push(new Vector3(x, 0, y));\r\n      // geometry.vertices.push(new Vector3(x, z, y));\r\n\r\n      // const d = Math.random() * PI;\r\n      // attributes.a_degree.value.push(d);\r\n      const d = (idx / this.data.length) * 2 * PI;\r\n      degree[idx * 2] = d;\r\n      degree[idx * 2 + 1] = d;\r\n\r\n      const r = Math.random() * 2 - 1;\r\n      displacement[idx * 2] = r;\r\n      displacement[idx * 2 + 1] = r;\r\n\r\n      const color = scale(z);\r\n      const v3 = new Vector3(color.r * 255, color.g * 255, color.b * 255);\r\n      // console.log(;\r\n      // v3Colors.push(0, 0, 0);\r\n      v3Colors.push(color.r, color.g, color.b);\r\n      v3Colors.push(color.r, color.g, color.b);\r\n      // color[idx * 2 + 1] = v3;\r\n    });\r\n\r\n    geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\r\n    geometry.addAttribute('a_degree', new BufferAttribute(degree, 1));\r\n    geometry.addAttribute(\r\n      'a_displacement',\r\n      new BufferAttribute(displacement, 1)\r\n    );\r\n    geometry.addAttribute('a_color', new Float32BufferAttribute(v3Colors, 3));\r\n    // geometry.addAttribute( 'a_color', new BufferAttribute( {type: 'c', value: v3Colors}, 3 ).copyColorsArray(v3Colors) );\r\n    // geometry.addAttribute( 'a_degree', new Float32BufferAttribute( degree, 3 ) );\r\n\r\n    const material = new ShaderMaterial({\r\n      uniforms,\r\n      vertexShader,\r\n      fragmentShader,\r\n      blending: AdditiveBlending\r\n    });\r\n\r\n    const mesh = new LineSegments(geometry, material);\r\n    this.group.add(mesh);\r\n\r\n    const o = {\r\n      u_scaleZ: 0.1,\r\n      u_circle: 1,\r\n      u_circle2: 1\r\n    };\r\n\r\n    const tl = new TimelineMax({\r\n      repeat: -1,\r\n      repeatDelay: 1,\r\n      yoyo: true,\r\n      onUpdate: t => {\r\n        uniforms.u_circle.value = o.u_circle;\r\n        uniforms.u_circle2.value = o.u_circle2;\r\n        uniforms.u_scaleZ.value = o.u_scaleZ;\r\n      }\r\n    })\r\n      .to(o, 5, {\r\n        u_circle: 0,\r\n        u_scaleZ: 1,\r\n        u_circle2: 5,\r\n        ease: Power2.easeInOut,\r\n      })\r\n/*      .to(o, 5, {\r\n        u_circle: 0,\r\n        u_scaleZ: 1,\r\n        u_circle2: 4,\r\n        ease: Power2.easeInOut,\r\n      })\r\n      // .to(o, 2, {\r\n      //   u_circle: 0,\r\n      //   u_scaleZ: 1,\r\n      //   u_circle2: 2,\r\n      //   ease: Power2.easeInOut,\r\n      //   onUpdate: t => {\r\n      //     uniforms.u_circle.value = o.u_circle;\r\n      //     uniforms.u_circle2.value = o.u_circle2;\r\n      //     uniforms.u_scaleZ.value = o.u_scaleZ;\r\n      //   }\r\n      // });\r\n      // */\r\n\r\n    console.timeEnd('createObjects');\r\n  }\r\n\r\n  update() {}\r\n}\r\n\r\nexport default CSVLayer;\r\n\r\nfunction shuffleArray(a) {\r\n  for (let i = a.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [a[i], a[j]] = [a[j], a[i]];\r\n  }\r\n  return a;\r\n}\r\n","import {\r\n  AdditiveBlending,\r\n  Group,\r\n  Geometry,\r\n  LineBasicMaterial,\r\n  LineSegments,\r\n  ExtrudeGeometry,\r\n  Mesh,\r\n  MeshBasicMaterial,\r\n  // MeshNormalMaterial,\r\n  // OctahedronGeometry,\r\n  Shape,\r\n  DoubleSide,\r\n  Vector3\r\n} from 'three';\r\nimport { featureEach } from '@turf/meta';\r\nimport { centroid, getCoords, getType, polygon, getCoord } from '@turf/turf';\r\nimport { TweenLite, Power2, Bounce, Elastic, SteppedEase } from 'gsap/all';\r\nimport { scaleLinear, scaleThreshold, scaleQuantize } from 'd3-scale';\r\n\r\nimport { pairs } from 'd3';\r\nimport Mercator from './Mercator.class';\r\nimport { PI_HALF } from '../config';\r\n    \r\nconst colors = [\r\n  0x3de6b1,\r\n  0x22ecf0,\r\n  0x19d1fd,\r\n  0x14b1fd,\r\n  0x2c7fdb,\r\n  0x3d52bf,\r\n  0x6539b3,\r\n  0xa032b2,\r\n  0xd124a9,\r\n  0xfb139c,\r\n  0xfd4dab,\r\n  0xfea7d4,\r\n  0xffffff\r\n].map(color => new MeshBasicMaterial({\r\n  color,\r\n  side: DoubleSide\r\n  // opacity: 0.5,\r\n  // blending: AdditiveBlending,\r\n  // transparent: true\r\n}));\r\n\r\nconst scale = scaleThreshold()\r\n.domain([3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39])\r\n.range(colors);\r\n\r\n\r\nclass GeoJsonLayer {\r\n  constructor(geojson, options) {\r\n    this.geojson = geojson;\r\n    this.options = { ...options };\r\n\r\n    this.mercator = new Mercator();\r\n  }\r\n\r\n  init(group) {\r\n    this.group = new Group();\r\n    this.group.name = 'GeoJsonLayer.group';\r\n    group.add(this.group);\r\n\r\n    featureEach(this.geojson, (feature, id) => this.createMesh(feature, id));\r\n  }\r\n\r\n  destroy() {}\r\n\r\n  createMesh(feature, id) {\r\n    const geometry = new Geometry();\r\n\r\n    const polygons = [];\r\n    if (getType(feature) === 'MultiPolygon') {\r\n      getCoords(feature).forEach(coords => polygons.push(coords));\r\n    } else if (getType(feature) === 'Polygon') {\r\n      polygons.push(getCoords(feature));\r\n    } else {\r\n      polygons.push(getCoords(feature));\r\n      // throw new Error('Type is ' + getType(feature));\r\n    }\r\n\r\n    // const material = new MeshBasicMaterial();\r\n    const startY = 12;\r\n    const gap = 4;\r\n\r\n\r\n    polygons.forEach((coords, polygonId) => {\r\n      const polyCentroid = getCoord(centroid(polygon(coords)));\r\n      const centerPoint = this.mercator.fromGeo(polyCentroid[0], polyCentroid[1]);\r\n\r\n      if (this.options.fill) {\r\n        const shape = new Shape();\r\n\r\n        const points = coords[0].map(c => this.mercator.fromGeo(c[0], c[1]));\r\n\r\n        const startPoint = points.shift();\r\n        shape.moveTo(startPoint.x - centerPoint.x, startPoint.y - centerPoint.y);\r\n        points.forEach(p => {\r\n          shape.lineTo(p.x - centerPoint.x, p.y - centerPoint.y)\r\n        });\r\n        \r\n\r\n        const geometry = new ExtrudeGeometry(shape, {\r\n          amount: -5,//-feature.properties.value,\r\n          bevelEnabled: true,\r\n          bevelSegments: 2,\r\n          steps: 2,\r\n          bevelSize: 1,\r\n          bevelThickness: 1\r\n        });\r\n\r\n        const mesh = new Mesh(\r\n          geometry,\r\n          scale(feature.properties.value)\r\n        );\r\n\r\n        mesh.position.set(centerPoint.x, 0, centerPoint.y);\r\n        mesh.rotation.x = PI_HALF;\r\n\r\n        this.group.add(mesh);\r\n      } else {\r\n        \r\n        const points = coords[0].map(c => {\r\n          const p = this.mercator.fromGeo(c[0], c[1]);\r\n          return new Vector3(p.x - centerPoint.x, 0, p.y - centerPoint.y);\r\n        });\r\n\r\n        pairs(points, (a, b) => geometry.vertices.push(a, b));\r\n\r\n          const material = new LineBasicMaterial({\r\n            color: this.options.color || 0x67fefe,\r\n            opacity: 0,\r\n            transparent: true\r\n          });\r\n\r\n          const mesh = new LineSegments(geometry, material);\r\n          mesh.scale.set(0.001, 1, 0.001);\r\n          mesh.position.set(centerPoint.x, this.options.pos || 5, centerPoint.y);\r\n\r\n          const o = {\r\n            _scale: 0.001\r\n          }\r\n\r\n          TweenLite.to(o, 1.0, {\r\n            _scale: 1,\r\n            delay: 1 + id * 0.03,\r\n            // ease: Bounce.easeOut,\r\n            // ease:  Elastic.easeOut.config(1, 0.3),\r\n            ease:  SteppedEase.config(10),\r\n            onUpdate: t => {\r\n              // mesh.scale.set(o._scale, o._scale, o._scale);\r\n              mesh.scale.set(o._scale, 1, o._scale);\r\n              mesh.material.opacity = o._scale * (this.options.opacity || 0.3);\r\n              // mesh.rotation.y = ((1 - o._scale) * PI_HALF);\r\n              // mesh.position.setY(50);\r\n            }\r\n          });\r\n\r\n          this.group.add(mesh);\r\n\r\n          if (feature.properties['NROSIEDLA'] === 1) {\r\n            const meshDuplicate = mesh.clone();\r\n            meshDuplicate.material.color.setHex(0x3498db);\r\n            meshDuplicate.scale.set(0.99, 1, 0.99);\r\n            this.group.add(meshDuplicate);\r\n          }\r\n      }\r\n    });\r\n  }\r\n\r\n  update() {}\r\n}\r\n\r\nexport default GeoJsonLayer;\r\n","import { Subject } from 'rxjs';\r\n\r\nclass SceneService {\r\n\r\n  constructor() {\r\n    this.sceneSwitch$ = new Subject();\r\n    this.sceneProgress$ = new Subject();\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default new SceneService();","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport parse from 'csv-parse/lib/sync';\r\n\r\nimport styles from './SceneContainer.module.css';\r\nimport SceneManager from '../../classes/SceneManager.class';\r\nimport TileGridLayer from '../../classes/TileGridLayer.class';\r\nimport {\r\n  BBOX_WROCLAW,\r\n  TILE_URL_LOCAL,\r\n  TILE_URL_CARTO_DARK\r\n  // TILE_URL_OSM,\r\n  // TILE_URL_ESRI,\r\n  // TILE_URL_ORTO_2018\r\n} from '../../config';\r\nimport CSVLayer from '../../classes/CSVLayer.class';\r\nimport SurfaceLayer from '../../classes/SurfaceLayer.class';\r\nimport GeoJsonLayer from '../../classes/GeoJsonLayer.class';\r\nimport ImageLayer from '../../classes/ImageLayer.class';\r\nimport ShaderLayer from '../../classes/ShaderLayer.class';\r\n\r\nimport SceneService from '../../classes/SceneService';\r\n\r\nexport class SceneContainer extends Component {\r\n  canvasRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.sceneManager = new SceneManager(this.canvasRef.current);\r\n\r\n    this.initLayers();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.sceneManager.destroy();\r\n  }\r\n\r\n  initLayers() {\r\n    // const shaderLayer = new ShaderLayer();\r\n    // this.sceneManager.addLayer(shaderLayer);\r\n\r\n    // const tilelayer = new TileGridLayer(BBOX_WROCLAW, TILE_URL_CARTO_DARK, {\r\n    //   offset: -10,\r\n    //   tileOffset: 2\r\n    // });\r\n    // this.sceneManager.addLayer(tilelayer);\r\n\r\n    // const ortoLayer = new ImageLayer(\r\n    //   // `${process.env.PUBLIC_URL}/assets/heatmap_test.png`,\r\n    //   `${process.env.PUBLIC_URL}/assets/orto200dpi-min.png`,\r\n    //   [16.8073368072509766,51.0426673889160156,17.1762199401855469,51.2100677490234375],\r\n    //   {\r\n    //     alphaMap: `${process.env.PUBLIC_URL}/assets/wroclaw_boundary_alpha_map.png`,\r\n    //     offsetY: 1,\r\n    //     opacity: 0.2\r\n    //   }\r\n    // );\r\n    // this.sceneManager.addLayer(ortoLayer);\r\n\r\n    // const heatmapLayer = new ImageLayer(\r\n    //   `${process.env.PUBLIC_URL}/assets/heatmap_test.png`,\r\n    //   [\r\n    //     16.8073368072509766,\r\n    //     51.0426673889160156,\r\n    //     17.1762199401855469,\r\n    //     51.2100677490234375\r\n    //   ],\r\n    //   {\r\n    //     alphaMap: `${\r\n    //       process.env.PUBLIC_URL\r\n    //     }/assets/wroclaw_boundary_alpha_map.png`,\r\n    //     offsetY: 0,\r\n    //     opacity: 0.75\r\n    //   }\r\n    // );\r\n    // this.sceneManager.addLayer(heatmapLayer);\r\n\r\n    // const tilelayer2 = new TileGridLayer(BBOX_WROCLAW, TILE_URL_LOCAL, {offset: -2});\r\n    // this.sceneManager.addLayer(tilelayer2);\r\n\r\n    axios\r\n      .get(\r\n        `${process.env.PUBLIC_URL}/assets/wroclaw-osiedla-simplified.geo.json`\r\n        // `${process.env.PUBLIC_URL}/assets/roads_secondary.geo.json`\r\n      )\r\n      .then(response => {\r\n        const boundslayer = new GeoJsonLayer(response.data);\r\n        this.sceneManager.addLayer(boundslayer);\r\n      });\r\n\r\n    // axios\r\n    //   .get(\r\n    //     `${process.env.PUBLIC_URL}/assets/grid_200m_hex_grid.geojson`\r\n    //     // `${process.env.PUBLIC_URL}/assets/roads_secondary.geo.json`\r\n    //   )\r\n    //   .then(response => {\r\n    //     const boundslayer = new GeoJsonLayer(response.data, {\r\n    //       fill: true\r\n    //     });\r\n    //     this.sceneManager.addLayer(boundslayer);\r\n    //   });\r\n\r\n    axios\r\n      .get(`${process.env.PUBLIC_URL}/assets/grid_100m_hex.csv`)\r\n      // .get(`${process.env.PUBLIC_URL}/assets/grid_100m_hex.csv`)\r\n      // .get(`${process.env.PUBLIC_URL}/assets/centroidy.csv`)\r\n      .then(response => {\r\n        const centroidsLayer = new CSVLayer(response.data);\r\n        this.sceneManager.addLayer(centroidsLayer);\r\n      });\r\n\r\n    // axios\r\n    //   .get(`${process.env.PUBLIC_URL}/assets/river_clean.geo.json`)\r\n    //   .then(response => {\r\n    //     const riverLayer = new GeoJsonLayer(response.data, {\r\n    //       color: 0x3498db,\r\n    //       fill: true\r\n    //     });\r\n    //     this.sceneManager.addLayer(riverLayer);\r\n    //   });\r\n\r\n    // axios// .get(`${process.env.PUBLIC_URL}/assets/test_grid_5km.csv`)\r\n    //   .get(`${process.env.PUBLIC_URL}/assets/grid_500m_square.csv`)\r\n    //   .then(response => {\r\n    //     const surfaceLayer = new SurfaceLayer(\r\n    //       parse(response.data, { columns: true }),\r\n    //       {\r\n    //         rows: 77,\r\n    //         cols: 58\r\n    //       }\r\n    //     );\r\n    //     // this.sceneManager.addLayer(surfaceLayer);\r\n    //   });\r\n\r\n    // SceneService.sceneSwitch$.subscribe(state => {\r\n    //   if (state.layer === 'heatmap') {\r\n    //     this.sceneManager.setLayerVisibility(heatmapLayer, state.visible);\r\n    //   }\r\n    // });\r\n\r\n    // SceneService.sceneProgress$\r\n    //   .pipe(\r\n    //     distinctUntilChanged(),\r\n    //     debounceTime(10)\r\n    //   )\r\n    //   .subscribe(state => {\r\n    //     if (state.layer === 'heatmap') {\r\n    //       this.sceneManager.setLayerOpacity(\r\n    //         heatmapLayer,\r\n    //         state.progress,\r\n    //         state.direction\r\n    //       );\r\n    //     }\r\n    //   });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <canvas ref={this.canvasRef} className={styles.canvas} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport anime from 'animejs';\r\n\r\nimport styles from './Frame.module.css';\r\n\r\nconst paths = {\r\n  step0: (frameSize, width, height) =>\r\n    `M 0,0 0,${height} ${width},${height} ${width},0 0,0 Z M 0,0 ${width},0 ${width},${height} 0,${height} Z`,\r\n  step1: (frameSize, width, height) =>\r\n    `M 0,0 0,${height} ${width},${height} ${width},0 0,0 Z M ${frameSize},${frameSize} ${width},0 ${width},${height} 0,${height} Z`,\r\n  step2: (frameSize, width, height) =>\r\n    `M 0,0 0,${height} ${width},${height} ${width},0 0,0 Z M ${frameSize},${frameSize} ${width -\r\n      frameSize},${frameSize} ${width},${height} 0,${height} Z`,\r\n  step3: (frameSize, width, height) =>\r\n    `M 0,0 0,${height} ${width},${height} ${width},0 0,0 Z M ${frameSize},${frameSize} ${width -\r\n      frameSize},${frameSize} ${width - frameSize},${height -\r\n      frameSize} 0,${height} Z`,\r\n  step4: (frameSize, width, height) =>\r\n    `M 0,0 0,${height} ${width},${height} ${width},0 0,0 Z M ${frameSize},${frameSize} ${width -\r\n      frameSize},${frameSize} ${width - frameSize},${height -\r\n      frameSize} ${frameSize},${height - frameSize} Z`\r\n};\r\n\r\n// const pathNew = (width, height) => {\r\n//   const point1 = {x: width/4-50, y: height/4+50};\r\n//   const point2 = {x: width/4+50, y: height/4-50};\r\n//   const point3 = {x: width-point2.x, y: height-point2.y};\r\n//   const point4 = {x: width-point1.x, y: height-point1.y};\r\n\r\n//   return `M 0,0 0,${height} ${width},${height} ${width},0 0,0 Z M ${point1.x},${point1.y} ${point2.x},${point2.y} ${point4.x},${point4.y} ${point3.x},${point3.y} Z`;\r\n// }\r\n\r\nexport class Frame extends Component {\r\n  state = {\r\n    rect: {\r\n      width: 0,\r\n      height: 0\r\n    }\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.svg = React.createRef();\r\n    this.path = React.createRef();\r\n    this.frameSize = 45;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const rect = this.svg.current.getBoundingClientRect();\r\n    this.setState({ rect });\r\n\r\n    const animateShapeOutTimeline = anime.timeline({\r\n      duration: 300,\r\n      easing: 'easeInQuad',\r\n      direction: 'alternate',\r\n      loop: true\r\n    });\r\n\r\n    const path = this.path;\r\n\r\n    animateShapeOutTimeline\r\n      .add({\r\n        targets: path.current,\r\n        d: paths.step1(this.frameSize, rect.width, rect.height)\r\n      })\r\n      .add({\r\n        targets: path.current,\r\n        d: paths.step2(this.frameSize, rect.width, rect.height)\r\n      })\r\n      .add({\r\n        targets: path.current,\r\n        d: paths.step3(this.frameSize, rect.width, rect.height)\r\n      })\r\n      .add({\r\n        targets: path.current,\r\n        d: paths.step4(this.frameSize, rect.width, rect.height)\r\n      });\r\n\r\n    console.log(rect);\r\n    console.log(paths.step2(this.frameSize, rect.width, rect.height));\r\n    // console.log(this.frameSize)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <svg\r\n        className={styles.Frame}\r\n        ref={this.svg}\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        vievbox={`0 0 ${this.state.rect.width} ${this.state.rect.height}`}\r\n      >\r\n        <defs>\r\n          <linearGradient id=\"gradient1\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\r\n            <stop offset=\"0%\" stopColor=\"#ED4264\" />\r\n            <stop offset=\"100%\" stopColor=\"#FFEDBC\" />\r\n          </linearGradient>\r\n        </defs>\r\n        <path\r\n          ref={this.path}\r\n          d={paths.step0(\r\n            this.frameSize,\r\n            this.state.rect.width,\r\n            this.state.rect.height\r\n          )}\r\n          fill=\"url(#gradient1)\"\r\n        />\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { isElement } from 'react-is';\r\nimport { fromEvent } from 'rxjs';\r\n\r\nconst defaultProps = {\r\n  topOffset: '0px',\r\n  bottomOffset: '0px',\r\n  horizontalll: false,\r\n  onProgress() {}\r\n};\r\n\r\nconst POSITION = {\r\n  ABOVE: 'above',\r\n  BELOW: 'below',\r\n  INSIDE: 'inside',\r\n  INVISIBLE: 'invisible'\r\n};\r\n\r\nclass Scrollr extends Component {\r\n  state = {\r\n    progress: 0\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.refEl = React.createRef();\r\n    this.scrollableParent = null;\r\n    this.subscriptions = [];\r\n\r\n    this.handleScroll = this.handleScroll.bind(this);\r\n    this.renderArgs = {};\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.scrollableParent = this.getScrollableParent();\r\n\r\n    this.scroll$ = fromEvent(this.scrollableParent, 'scroll', {\r\n      passive: true\r\n    });\r\n    this.subscriptions.push(this.scroll$);\r\n\r\n    this.scroll$.subscribe(this.handleScroll);\r\n  }\r\n\r\n  handleScroll(event) {\r\n    // log(event);\r\n\r\n    const bounds = this.getBounds();\r\n    \r\n    const previousPosition = this.position;\r\n    const currentPosition = this.getPosition(bounds);\r\n    this.position = currentPosition;\r\n\r\n    // log(JSON.stringify(bounds, false, 2));\r\n    // log({ currentPosition, previousPosition });\r\n\r\n\r\n    const cbArgs = {\r\n      position: currentPosition   \r\n    }\r\n\r\n    if (bounds.topOffsetPx === 0) {\r\n      // 100% in the middle of ancestor;\r\n      const pointEnd = (bounds.viewportBottom - bounds.viewportTop) / 2;\r\n      const pTop = 1 - Math.max(Math.min((bounds.waypointTop - pointEnd) / pointEnd, 1), 0);\r\n      const pBottom = 1 - Math.max(Math.min(-(bounds.waypointBottom - pointEnd) / pointEnd, 1), 0);\r\n\r\n      const direction = pTop > pBottom ? -1 : 1;\r\n      log('direction:', direction);\r\n      cbArgs.direction = direction;\r\n\r\n      if (currentPosition === POSITION.INSIDE) {\r\n        cbArgs.progress = Math.min(pTop, pBottom);\r\n        log(Math.min(pTop, pBottom));\r\n        log(pTop, pBottom);\r\n        this.props.onProgress(cbArgs);\r\n        this.setState(cbArgs);\r\n      } else {\r\n        cbArgs.progress = 0;\r\n        this.setState(cbArgs);\r\n      }\r\n\r\n    } else {\r\n      // calc 0 - 100 %\r\n    }\r\n\r\n    if (previousPosition === currentPosition) {\r\n      return;\r\n    }\r\n\r\n    if (currentPosition === POSITION.INSIDE) {\r\n      this.props.onEnter();\r\n    } else if (previousPosition === POSITION.INSIDE) {\r\n      this.props.onLeave();\r\n    }\r\n\r\n\r\n  }\r\n\r\n  getPosition(bounds) {\r\n    if (bounds.viewportBottom - bounds.viewportTop === 0) {\r\n      return POSITION.INVISIBLE;\r\n    }\r\n  \r\n    // top is within the viewport\r\n    if (bounds.viewportTop <= bounds.waypointTop &&\r\n        bounds.waypointTop <= bounds.viewportBottom) {\r\n      return POSITION.INSIDE;\r\n    }\r\n  \r\n    // bottom is within the viewport\r\n    if (bounds.viewportTop <= bounds.waypointBottom &&\r\n        bounds.waypointBottom <= bounds.viewportBottom) {\r\n      return POSITION.INSIDE;\r\n    }\r\n  \r\n    // top is above the viewport and bottom is below the viewport\r\n    if (bounds.waypointTop <= bounds.viewportTop &&\r\n        bounds.viewportBottom <= bounds.waypointBottom) {\r\n      return POSITION.INSIDE;\r\n    }\r\n  \r\n    if (bounds.viewportBottom < bounds.waypointTop) {\r\n      return POSITION.BELOW;\r\n    }\r\n  \r\n    if (bounds.waypointTop < bounds.viewportTop) {\r\n      return POSITION.ABOVE;\r\n    }\r\n  \r\n    return POSITION.INVISIBLE;\r\n  }\r\n\r\n  getBounds() {\r\n    const parentElement = this.refEl.current;\r\n    const horizontal = this.props.horizontal;\r\n    const { left, top, right, bottom } = parentElement.getBoundingClientRect();\r\n\r\n    const waypointTop = horizontal ? left : top;\r\n    const waypointBottom = horizontal ? right : bottom;\r\n\r\n    let contextHeight;\r\n    let contextScrollTop;\r\n\r\n    if (this.scrollableParent === window) {\r\n      contextHeight = horizontal ? window.innerWidth : window.innerHeight;\r\n      contextScrollTop = 0;\r\n    } else {\r\n      contextHeight = horizontal\r\n        ? parentElement.offsetWidth\r\n        : parentElement.offsetHeight;\r\n      contextScrollTop = horizontal\r\n        ? parentElement.getBoundingClientRect().left\r\n        : parentElement.getBoundingClientRect().top;\r\n    }\r\n\r\n    const { bottomOffset, topOffset } = this.props;\r\n    const topOffsetPx = computeOffsetPixels(topOffset, contextHeight);\r\n    const bottomOffsetPx = computeOffsetPixels(bottomOffset, contextHeight);\r\n    const contextBottom = contextScrollTop + contextHeight;\r\n\r\n    return {\r\n      contextScrollTop,\r\n      topOffsetPx,\r\n      contextHeight,\r\n      waypointTop,\r\n      waypointBottom,\r\n      viewportTop: contextScrollTop + topOffsetPx,\r\n      viewportBottom: contextBottom - bottomOffsetPx,\r\n    }\r\n  }\r\n\r\n  getScrollableParent() {\r\n    const { horizontal } = this.props;\r\n\r\n    let node = this.refEl.current;\r\n\r\n    while (node.parentNode) {\r\n      node = node.parentNode;\r\n\r\n      if (node === document.body) {\r\n        return window;\r\n      }\r\n\r\n      const style = window.getComputedStyle(node);\r\n      const overflowDirec = horizontal\r\n        ? style.getPropertyValue('overflow-x')\r\n        : style.getPropertyValue('overflow-y');\r\n      const overflow = overflowDirec || style.getPropertyValue('overflow');\r\n\r\n      if (overflow === 'auto' || overflow === 'scroll') {\r\n        return node;\r\n      }\r\n    }\r\n\r\n    return window;\r\n  }\r\n\r\n  render() {\r\n    const { render, children } = this.props;\r\n    log('render typeof:', typeof render);\r\n\r\n    if (render && typeof render === 'function') {\r\n      log('function', this.state.cbArgs);\r\n      return React.cloneElement(render(this.state), { ref: this.refEl });\r\n    } else if (isElement(children)) {\r\n      log('children el');\r\n      return children;\r\n    }\r\n\r\n    return <div />;\r\n  }\r\n}\r\n\r\nexport default Scrollr;\r\nScrollr.defaultProps = defaultProps;\r\nScrollr.displayName = 'Scrollr';\r\n\r\nfunction log() {\r\n  return () => {};\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    return console.log.apply(null, arguments); // eslint-disable-line no-console\r\n  }\r\n}\r\n\r\nfunction computeOffsetPixels(offset, contextHeight) {\r\n  const pixelOffset = parseOffsetAsPixels(offset);\r\n\r\n  if (typeof pixelOffset === 'number') {\r\n    return pixelOffset;\r\n  }\r\n\r\n  const percentOffset = parseOffsetAsPercentage(offset);\r\n  if (typeof percentOffset === 'number') {\r\n    return percentOffset * contextHeight;\r\n  }\r\n}\r\n\r\nfunction parseOffsetAsPixels(str) {\r\n  if (!isNaN(parseFloat(str)) && isFinite(str)) {\r\n    return parseFloat(str);\r\n  } else if (str.slice(-2) === 'px') {\r\n    return parseFloat(str.slice(0, -2));\r\n  }\r\n}\r\n\r\nfunction parseOffsetAsPercentage(str) {\r\n  if (str.slice(-1) === '%') {\r\n    return parseFloat(str.slice(0, -1)) / 100;\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { fromEvent, Subject } from 'rxjs';\r\nimport {\r\n  map,\r\n  distinctUntilChanged,\r\n  bufferCount,\r\n  pairwise\r\n} from 'rxjs/operators';\r\n\r\nimport style from './CursorParallax.module.css';\r\n\r\nclass CursorParallax extends Component {\r\n  state = {\r\n    x: 0,\r\n    y: 0\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.initEvents = this.initEvents.bind(this);\r\n    this.unsetEvents = this.unsetEvents.bind(this);\r\n    this.loop = this.loop.bind(this);\r\n\r\n    this.cursorRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initEvents();\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.unsetEvents();\r\n  }\r\n\r\n  initEvents() {\r\n    this.mouseMove$ = fromEvent(window, 'mousemove', { passive: true });\r\n\r\n    this.mouseMove$.subscribe(({ clientX, clientY }) => {\r\n      this.target = { x: clientX, y: clientY };\r\n    });\r\n\r\n    this.cursorVisible = new Subject();\r\n\r\n    this.cursorVisible\r\n      .pipe(\r\n        map(val => {\r\n          return val < 25;\r\n        }),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(visible => {\r\n        this.cursorRef.current.classList.toggle(style.active, !visible);\r\n      });\r\n\r\n    this.raf = requestAnimationFrame(this.loop);\r\n  }\r\n\r\n  loop() {\r\n    if (this.target) {\r\n      const computed = this.cursorRef.current.getBoundingClientRect();\r\n      const v2 = {\r\n        x: computed.x - this.target.x,\r\n        y: computed.y - this.target.y\r\n      };\r\n\r\n      const a = [computed.x, computed.y];\r\n      const b = [\r\n        this.target.x - computed.width / 2,\r\n        this.target.y - computed.height / 2\r\n      ];\r\n\r\n      const diff = Math.hypot(a[0] - b[0], a[1] - b[1]);\r\n      const angle = Math.atan2(b[1] - a[1], b[0] - a[0]) * 180 / Math.PI;;\r\n\r\n      const pos = lerp(a, b, 2);\r\n\r\n      this.cursorVisible.next(diff);\r\n\r\n      this.cursorRef.current.style.transform = `translate(${pos[0]}px, ${\r\n        pos[1]\r\n      }px)`;\r\n    }\r\n\r\n    requestAnimationFrame(this.loop);\r\n  }\r\n\r\n  unsetEvents() {}\r\n\r\n  render() {\r\n    return (\r\n      <div className={style.wrapper}>\r\n        <div className={style.cursor} ref={this.cursorRef} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CursorParallax;\r\n\r\nfunction lerp(a, b, t) {\r\n  var len = a.length;\r\n  if (b.length != len) return;\r\n\r\n  var x = [];\r\n  for (var i = 0; i < len; i++) x.push(a[i] + t * (b[i] - a[i]));\r\n  return x;\r\n}\r\n","import React, { Component } from 'react';\n\nimport './App.css';\nimport { SceneContainer } from './components/SceneContainer/SceneContainer';\nimport { Frame } from './components/Frame/Frame';\n// import Waypoint from './components/Waypoint';\nimport Scrollr from './components/Scrollr';\nimport CursorParallax from './components/CursorParallax';\nimport SceneService from './classes/SceneService';\n\n\nclass App extends Component {\n  state = {\n    enabledScene: true,\n    enabledFrame: false\n  };\n\n  constructor() {\n    super();\n\n    this.toggle = this.toggle.bind(this);\n\n    this.handleWaypointEnter = this.handleWaypointEnter.bind(this);\n    this.handleWaypointLeave = this.handleWaypointLeave.bind(this);\n    this.handleWaypointProgress = this.handleWaypointProgress.bind(this);\n  }\n\n  toggle(propname) {\n    this.setState(state => ({\n      [propname]: !state[propname]\n    }));\n  }\n\n  handleWaypointEnter() {\n    console.log('enter');\n    SceneService.sceneSwitch$.next({layer: 'heatmap', visible: true});\n  }\n\n  handleWaypointLeave() {\n    console.log('leave');\n    SceneService.sceneSwitch$.next({layer: 'heatmap', visible: false});\n  }\n\n  handleWaypointProgress({ progress, direction }) {\n    SceneService.sceneProgress$.next({layer: 'heatmap', progress, direction });\n  }\n\n  onPositionChange(pos) {\n    // console.log('onPositionChange', pos);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"debug\">\n          <button onClick={() => this.toggle('enabledFrame')}>\n            frame on/off\n          </button>\n          <button onClick={() => this.toggle('enabledScene')}>\n            scene on/off\n          </button>\n        </div>\n        {this.state.enabledFrame && <Frame />}\n        {this.state.enabledScene && <SceneContainer />}\n        {/* <CursorParallax />\n        <main>\n          <section className=\"map\" />\n          <Scrollr\n            // topOffset='30%'\n            // bottomOffset='30%'\n            // debug={true}\n            onProgress={this.handleWaypointProgress}\n            onEnter={this.handleWaypointEnter}\n            onLeave={this.handleWaypointLeave}\n            onPositionChange={this.onPositionChange}\n            render={({ progress, position }) => <section className={position === 'inside' ? 'active' : ''}>\n              <div className={`page`}>\n                <h1>\n                  <span>Solutions </span>\n                </h1>\n                <p>\n                  <span>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Etiam tempor posuere risus, quis interdum ligula ullamcorper\n                    vel. Duis non nisl id ex imperdiet ultricies. Duis blandit\n                    ac arcu vitae pulvinar. Morbi facilisis mi tempor felis\n                    aliquet, volutpat faucibus mauris pellentesque. Sed non\n                    consequat arcu. Phasellus bibendum nibh massa, et pretium\n                    dolor accumsan a. Nulla pellentesque nibh tellus, a molestie\n                    purus finibus nec.\n                  </span>\n                </p>\n                <p>\n                  <span>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Etiam tempor posuere risus, quis interdum ligula ullamcorper\n                    vel. Duis non nisl id ex imperdiet ultricies. Duis blandit\n                    ac arcu vitae pulvinar. Morbi facilisis mi tempor felis\n                    aliquet, volutpat faucibus mauris pellentesque. Sed non\n                    consequat arcu. Phasellus bibendum nibh massa, et pretium\n                    dolor accumsan a. Nulla pellentesque nibh tellus, a molestie\n                    purus finibus nec.\n                  </span>\n                </p>\n              </div>\n            </section>}\n          />\n          <section />\n          <section />\n        </main> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cursor\":\"CursorParallax_cursor__14cNF\",\"active\":\"CursorParallax_active__3J2um\",\"wrapper\":\"CursorParallax_wrapper__Rq-RK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvas\":\"SceneContainer_canvas__2pnsa\",\"wrapper\":\"SceneContainer_wrapper__3kzlN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Frame\":\"Frame_Frame__Z95oO\"};"],"sourceRoot":""}