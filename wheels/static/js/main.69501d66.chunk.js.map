{"version":3,"sources":["components/Webcapture/Webcapture.module.css","components/Editor/Editor.module.css","logo.svg","components/Overlay/Overlay.module.css","components/Header/Header.js","components/Overlay/Overlay.js","components/Webcapture/Webcapture.js","components/Editor/Editor.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","wrapper","editor","photo","__webpack_require__","p","overlay","Header","react_default","a","createElement","style","height","Component","Webcapture","state","width","x","y","scale","wheels","r","containerRef","React","createRef","canvasRef","setRef","webcam","_this","capture","_this$state","canvas","document","getContext","drawImage","videoRef","dataUrl","toDataURL","props","onPhoto","image","_this2","this","_this$containerRef$cu","current","getBoundingClientRect","ctx","img","Image","addEventListener","setState","src","concat","process","querySelector","console","log","drawCanvas","stream","_this3","globalCompositeOperation","requestAnimationFrame","_this4","_this$state2","className","styles","ref","Fragment","react_webcam_default","audio","onUserMedia","init","screenshotFormat","videoConstraints","facingMode","onClick","xmlns","viewBox","fill","d","Editor","top","left","wheel","size","offset","canvasEl","mouseDowns$","fromEvent","pipe","map","mouseEventToCoordinate","mouseMoves$","mouseUps$","touchStarts$","touchEventToCoordinate","touchMoves$","touchEnds$","starts$","merge","moves$","ends$","pairwise","skipUntil","takeUntil","repeat","ev","clientX","clientY","subscribe","_ref","draw","drawPhoto","data","baseImg","_this$baseImg","imgWidth","imgHeight","h","w","drawWheels","wheelImg","forEach","idx","mouseEvent","preventDefault","touchEvent","changedTouches","App","components_Header_Header","components_Editor_Editor","components_Webcapture_Webcapture","reset","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.69501d66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Webcapture_wrapper__1EE0l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editor\":\"Editor_editor__1m6RV\",\"photo\":\"Editor_photo__y629u\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Overlay_overlay__2nZZl\"};","import React from 'react';\r\n\r\nconst Header = () => <div style={{ height: '40px' }}>header</div>\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nimport styles from './Overlay.module.css';\r\n\r\nclass Overlay extends Component {\r\n  canvasRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.canvas = this.canvasRef.current;\r\n    this.ctx = this.canvas.getContext('2d');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <canvas\r\n        ref={this.canvasRef}\r\n        width={this.props.width}\r\n        height={this.props.height}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Overlay;\r\n","import React, { Component } from 'react';\r\nimport Webcam from 'react-webcam';\r\n\r\nimport Overlay from '../Overlay';\r\n\r\nimport styles from './Webcapture.module.css';\r\n\r\nclass Webcapture extends Component {\r\n  state = {\r\n    width: 0,\r\n    height: 0,\r\n    overlay: {\r\n      x: 0,\r\n      y: 0,\r\n      scale: 1,\r\n      width: null,\r\n      height: null,\r\n    },\r\n    wheels: [\r\n      {x: 416, y: 440, r: 195},\r\n      {x: 1502, y: 440, r: 195}\r\n    ]\r\n  };\r\n\r\n  containerRef = React.createRef();\r\n  canvasRef = React.createRef();\r\n\r\n  setRef = webcam => {\r\n    this.webcam = webcam;\r\n  };\r\n\r\n  capture = () => {\r\n    const { overlay, width, height } = this.state;\r\n    // const imageSrc = this.webcam.getScreenshot();\r\n    // this.props.onPhoto(imageSrc);\r\n\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.drawImage(this.videoRef, 0, 0);\r\n\r\n    const dataUrl = canvas.toDataURL('image/png', 1);\r\n    this.props.onPhoto({\r\n      image: dataUrl,\r\n      overlay: this.state.overlay,\r\n      wheels: this.state.wheels\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { width, height } = this.containerRef.current.getBoundingClientRect();\r\n    this.canvas = this.canvasRef.current;\r\n    this.ctx = this.canvas.getContext('2d');\r\n\r\n    const img = new Image();\r\n    img.addEventListener(\r\n      'load',\r\n      () => {\r\n        // console.log('img loaded', img.width, img.height);\r\n\r\n        const scale = (width * 0.75) / img.width;\r\n        const x = width / 2 - (img.width * scale) / 2;\r\n        const y = height / 2 - (img.height * scale) / 2;\r\n\r\n        const overlay = {\r\n          width: img.width,\r\n          height: img.height,\r\n          x,\r\n          y,\r\n          scale\r\n        };\r\n\r\n        this.setState({ width, height, img, overlay });\r\n      },\r\n      false\r\n    );\r\n    img.src = `${process.env.PUBLIC_URL}/assets/images/${this.props.overlay}`;\r\n  }\r\n\r\n  init() {\r\n    this.videoRef = this.containerRef.current.querySelector('video');\r\n    console.log(this.videoRef);\r\n\r\n    this.drawCanvas();\r\n  }\r\n\r\n  handleStream(stream) {\r\n    console.log(stream);\r\n  }\r\n\r\n  drawCanvas() {\r\n    const { overlay } = this.state;\r\n    this.ctx.drawImage(this.videoRef, 0, 0);\r\n\r\n    this.ctx.globalCompositeOperation = 'screen';\r\n    this.ctx.drawImage(\r\n      this.state.img,\r\n      overlay.x,\r\n      overlay.y,\r\n      overlay.width * overlay.scale,\r\n      overlay.height * overlay.scale\r\n    );\r\n    this.ctx.globalCompositeOperation = 'source-over';\r\n\r\n    requestAnimationFrame(() => this.drawCanvas());\r\n  }\r\n\r\n  render() {\r\n    const { width, height } = this.state;\r\n\r\n    const videoConstraints = {\r\n      width: 1280,\r\n      height: 720,\r\n      facingMode: 'environment'\r\n    };\r\n\r\n    return (\r\n      <div className={styles.wrapper} ref={this.containerRef}>\r\n        <canvas width={width} height={height} ref={this.canvasRef} />\r\n        {width && height && (\r\n          <>\r\n            <Webcam\r\n              audio={false}\r\n              height={height}\r\n              width={width}\r\n              ref={this.setRef}\r\n              onUserMedia={() => this.init()}\r\n              screenshotFormat=\"image/png\"\r\n              videoConstraints={videoConstraints}\r\n              style={{ height: '100%', width: '100%' }}\r\n            />\r\n          </>\r\n        )}\r\n        <button onClick={this.capture}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 512 512\"\r\n            width=\"50\"\r\n            height=\"50\"\r\n          >\r\n            {/* <circle cx=\"256\" cy=\"320\" r=\"250\" fill=\"none\" stroke=\"#fff\" strokeWidth=\"15\"/> */}\r\n            <g fill=\"#fff\">\r\n              <path d=\"M452.7,133h-66.4l-28.8-53.9C350.2,65.4,336,57,320.5,57H191.5c-15.6,0-29.8,8.4-37.1,22.1L125.7,133 H59.3C36.1,133,17,152.1,17,175.3v237.8c0,23.2,19.1,41.9,42.3,41.9h393.5c23.2,0,42.3-18.8,42.3-41.9V175.3 C495,152.1,475.9,133,452.7,133z M471,413.1c0,9.9-8.3,17.9-18.3,17.9H59.3c-9.9,0-18.3-8-18.3-17.9V175.3 c0-9.9,8.3-18.3,18.3-18.3h73.6c4.4,0,8.5-2.3,10.6-6.2l32.2-60.4c3.1-5.9,9.2-9.4,15.9-9.4h128.9c6.7,0,12.8,3.6,15.9,9.5 l32.2,60.3c2.1,3.9,6.2,6.2,10.6,6.2h73.6c9.9,0,18.3,8.4,18.3,18.3V413.1z\" />\r\n              <path d=\"M256,174.3c-61.4,0-111.3,49.9-111.3,111.3S194.6,396.9,256,396.9s111.3-49.9,111.3-111.3 S317.4,174.3,256,174.3z M256,372.9c-48.1,0-87.3-39.2-87.3-87.3s39.2-87.3,87.3-87.3s87.3,39.2,87.3,87.3S304.1,372.9,256,372.9z\" />\r\n              <path d=\"M216,142h79c6.6,0,12-5.4,12-12s-5.4-12-12-12h-79c-6.6,0-12,5.4-12,12S209.4,142,216,142z\" />\r\n            </g>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Webcapture;\r\n","import React, { Component } from 'react';\r\nimport { fromEvent, merge } from 'rxjs';\r\nimport { takeUntil, skipUntil, repeat, pairwise, map } from 'rxjs/operators';\r\n\r\nimport styles from './Editor.module.css';\r\n\r\nclass Editor extends Component {\r\n  canvasRef = React.createRef();\r\n  containerRef = React.createRef();\r\n\r\n  state = {\r\n    // ctx: null,\r\n    top: null,\r\n    left: null,\r\n    width: null,\r\n    height: null,\r\n    wheel: {\r\n      img: 'wheel-1.png',\r\n      size: 331\r\n    },\r\n    offset: [{ x: 0, y: 0 }, { x: 0, y: 0 }]\r\n  };\r\n\r\n  componentDidMount() {\r\n    const {\r\n      width,\r\n      height,\r\n      top,\r\n      left\r\n    } = this.containerRef.current.getBoundingClientRect();\r\n    this.ctx = this.canvasRef.current.getContext('2d');\r\n\r\n    const canvasEl = this.canvasRef.current;\r\n    const mouseDowns$ = fromEvent(canvasEl, 'mousedown').pipe(\r\n      map(mouseEventToCoordinate)\r\n    );\r\n    const mouseMoves$ = fromEvent(canvasEl, 'mousemove').pipe(\r\n      map(mouseEventToCoordinate)\r\n    );\r\n    const mouseUps$ = fromEvent(canvasEl, 'mouseup').pipe(\r\n      map(mouseEventToCoordinate)\r\n    );\r\n\r\n    const touchStarts$ = fromEvent(canvasEl, 'touchstart').pipe(\r\n      map(touchEventToCoordinate)\r\n    );\r\n    const touchMoves$ = fromEvent(canvasEl, 'touchmove').pipe(\r\n      map(touchEventToCoordinate)\r\n    );\r\n    const touchEnds$ = fromEvent(canvasEl, 'touchend').pipe(\r\n      map(touchEventToCoordinate)\r\n    );\r\n\r\n    const starts$ = merge(mouseDowns$, touchStarts$);\r\n    const moves$ = merge(mouseMoves$, touchMoves$);\r\n    const ends$ = merge(mouseUps$, touchEnds$);\r\n\r\n    /*const mouseMove$ = fromEvent(this.canvasRef.current, 'mousemove').pipe(\r\n      map(ev => ({ x: ev.clientX, y: ev.clientY, clientX: ev.clientX, clientY: ev.clientY }))\r\n    );\r\n    const mouseDown$ = fromEvent(this.canvasRef.current, 'mousedown');\r\n    const mouseUp$ = fromEvent(this.canvasRef.current, 'mouseup');*/\r\n\r\n    const drag$ = moves$.pipe(\r\n      pairwise(),\r\n      skipUntil(starts$),\r\n      takeUntil(ends$),\r\n      repeat(),\r\n      map(ev => ({\r\n        x: ev[1].x - ev[0].x,\r\n        y: ev[1].y - ev[0].y,\r\n        clientX: ev[1].x,\r\n        clientY: ev[1].y\r\n      }))\r\n    );\r\n\r\n    drag$.subscribe(({ x, y }) => {\r\n      this.setState(\r\n        state => {\r\n          const offset = [\r\n            { x: state.offset[0].x + x, y: state.offset[0].y + y },\r\n            { x: state.offset[1].x + x, y: state.offset[1].y + y }\r\n          ];\r\n\r\n          return { offset };\r\n        },\r\n        () => this.draw()\r\n      );\r\n    });\r\n\r\n    this.setState({ width, height, top, left }, () => {\r\n      this.draw();\r\n    });\r\n  }\r\n\r\n  draw() {\r\n    this.drawPhoto();\r\n  }\r\n\r\n  drawPhoto() {\r\n    const { width, height } = this.state;\r\n    const { data } = this.props;\r\n\r\n    if (!this.baseImg) {\r\n      const img = new Image();\r\n      img.addEventListener(\r\n        'load',\r\n        () => {\r\n          this.baseImg = img;\r\n          const { width: imgWidth, height: imgHeight } = img;\r\n\r\n          const h = height;\r\n          const w = (height / imgHeight) * imgWidth;\r\n          const x = (width - w) / 2;\r\n\r\n          this.ctx.drawImage(img, x, 0, w, h);\r\n\r\n          this.drawWheels();\r\n        },\r\n        false\r\n      );\r\n\r\n      img.src = data.image;\r\n    } else {\r\n      const { width: imgWidth, height: imgHeight } = this.baseImg;\r\n\r\n      const h = height;\r\n      const w = (height / imgHeight) * imgWidth;\r\n      const x = (width - w) / 2;\r\n\r\n      this.ctx.drawImage(this.baseImg, x, 0, w, h);\r\n\r\n      this.drawWheels();\r\n    }\r\n  }\r\n\r\n  drawWheels() {\r\n    const { width, height } = this.state;\r\n    const { data } = this.props;\r\n\r\n    if (!this.wheelImg) {\r\n      const img = new Image();\r\n      img.addEventListener(\r\n        'load',\r\n        () => {\r\n          console.log('heres');\r\n          this.wheelImg = img;\r\n          data.wheels.forEach((wheel, idx) => {\r\n            const x = data.overlay.x + wheel.x * data.overlay.scale;\r\n            const y = data.overlay.y + wheel.y * data.overlay.scale;\r\n            const r = wheel.r * data.overlay.scale;\r\n\r\n            this.ctx.drawImage(img, x - r / 2, y - r / 2, r, r);\r\n          });\r\n        },\r\n        false\r\n      );\r\n\r\n      img.src = `${process.env.PUBLIC_URL}/assets/wheels/${\r\n        this.state.wheel.img\r\n      }`;\r\n    } else {\r\n      data.wheels.forEach((wheel, idx) => {\r\n        const x =\r\n          data.overlay.x +\r\n          wheel.x * data.overlay.scale +\r\n          this.state.offset[idx].x;\r\n        const y =\r\n          data.overlay.y +\r\n          wheel.y * data.overlay.scale +\r\n          this.state.offset[idx].y;\r\n        const r = wheel.r * data.overlay.scale;\r\n\r\n        this.ctx.drawImage(this.wheelImg, x - r / 2, y - r / 2, r, r);\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.editor} ref={this.containerRef}>\r\n        <canvas\r\n          ref={this.canvasRef}\r\n          width={this.state.width}\r\n          height={this.state.height}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Editor;\r\n\r\nfunction mouseEventToCoordinate(mouseEvent) {\r\n  mouseEvent.preventDefault();\r\n  return {\r\n    x: mouseEvent.clientX,\r\n    y: mouseEvent.clientY\r\n  };\r\n}\r\n\r\nfunction touchEventToCoordinate(touchEvent) {\r\n  touchEvent.preventDefault();\r\n  return {\r\n    x: touchEvent.changedTouches[0].clientX,\r\n    y: touchEvent.changedTouches[0].clientY\r\n  };\r\n}\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Header from './components/Header';\nimport Webcapture from './components/Webcapture';\nimport Editor from './components/Editor';\n\nclass App extends Component {\n  state = {\n    data: null,\n    overlay: 'bmw-320d-2014.png'\n  };\n\n  onPhoto(data) {\n    this.setState({ data });\n  }\n\n  reset() {\n    this.setState({ data: null});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        {this.state.data ? (\n          <Editor data={this.state.data} />\n        ) : (\n          <>\n          <Webcapture overlay={this.state.overlay} onPhoto={data => this.onPhoto(data)} />\n          </>\n        )}\n        <button className='reset' onClick={() => this.reset()}>reset</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}